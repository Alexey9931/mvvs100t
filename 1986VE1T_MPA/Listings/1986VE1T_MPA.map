Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) for RST_CLK_DeInit
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig) for RST_CLK_HSEconfig
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) for RST_CLK_HSEstatus
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig) for RST_CLK_CPU_PLLconfig
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd) for RST_CLK_CPU_PLLcmd
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) for RST_CLK_CPU_PLLstatus
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler) for RST_CLK_CPUclkPrescaler
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse) for RST_CLK_CPU_PLLuse
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    clock.o(.text.CLOCK_Init) refers to system_mdr32f1qi.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clock.o(.ARM.exidx.text.CLOCK_Init) refers to clock.o(.text.CLOCK_Init) for [Anonymous Symbol]
    dma.o(.text.DMA_common_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    dma.o(.text.DMA_common_init) refers to mdr32fxqi_dma.o(.text.DMA_DeInit) for DMA_DeInit
    dma.o(.ARM.exidx.text.DMA_common_init) refers to dma.o(.text.DMA_common_init) for [Anonymous Symbol]
    dma.o(.text.DMA_IRQHandler) refers to mdr32fxqi_dma.o(.text.DMA_GetFlagStatus) for DMA_GetFlagStatus
    dma.o(.text.DMA_IRQHandler) refers to uart.o(.text.DMA_UART_RX_init) for DMA_UART_RX_init
    dma.o(.text.DMA_IRQHandler) refers to mdr32fxqi_dma.o(.text.DMA_Init) for DMA_Init
    dma.o(.text.DMA_IRQHandler) refers to spi.o(.text.dma_spi_rx_init) for dma_spi_rx_init
    dma.o(.text.DMA_IRQHandler) refers to uart.o(.bss.UART1) for UART1
    dma.o(.text.DMA_IRQHandler) refers to uart.o(.bss.UART2) for UART2
    dma.o(.text.DMA_IRQHandler) refers to 1273pv19t.o(.bss.adc_1) for adc_1
    dma.o(.text.DMA_IRQHandler) refers to spi.o(EXECUTABLE_MEMORY_SECTION) for spi_1
    dma.o(.ARM.exidx.text.DMA_IRQHandler) refers to dma.o(.text.DMA_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to clock.o(.text.CLOCK_Init) for CLOCK_Init
    main.o(.text.main) refers to dma.o(.text.DMA_common_init) for DMA_common_init
    main.o(.text.main) refers to ebc.o(.text.ebc_init) for ebc_init
    main.o(.text.main) refers to external_ram.o(.text.init_external_ram_space) for init_external_ram_space
    main.o(.text.main) refers to spi.o(.text.spi_init) for spi_init
    main.o(.text.main) refers to timer.o(.text.timer_init) for timer_init
    main.o(.text.main) refers to external_ram.o(.text.find_max_halfword) for find_max_halfword
    main.o(.text.main) refers to 1273pv19t.o(.text.adc_init) for adc_init
    main.o(.text.main) refers to uart.o(.text.uart_set_read_timeout) for uart_set_read_timeout
    main.o(.text.main) refers to uart.o(.text.uart_init) for uart_init
    main.o(.text.main) refers to uart.o(.text.DMA_UART_RX_init) for DMA_UART_RX_init
    main.o(.text.main) refers to timer.o(.text.delay_milli) for delay_milli
    main.o(.text.main) refers to main.o(.text.do_mpa_task) for do_mpa_task
    main.o(.text.main) refers to spi.o(EXECUTABLE_MEMORY_SECTION) for spi_1
    main.o(.text.main) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    main.o(.text.main) refers to timer.o(.bss.timer_1) for timer_1
    main.o(.text.main) refers to timer.o(.bss.timer_3) for timer_3
    main.o(.text.main) refers to timer.o(.bss.timer_2) for timer_2
    main.o(.text.main) refers to 1273pv19t.o(.bss.adc_1) for adc_1
    main.o(.text.main) refers to uart.o(.bss.UART1) for UART1
    main.o(.text.main) refers to uart.o(.bss.UART2) for UART2
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.do_mpa_task) refers to external_ram.o(.text.find_max_halfword) for find_max_halfword
    main.o(.text.do_mpa_task) refers to aeabi_sdiv.o(.text) for __aeabi_idiv
    main.o(.text.do_mpa_task) refers to fflti.o(.text) for __aeabi_i2f
    main.o(.text.do_mpa_task) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    main.o(.text.do_mpa_task) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    main.o(.text.do_mpa_task) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    main.o(.text.do_mpa_task) refers to 1273pv19t.o(.bss.adc_1) for adc_1
    main.o(.ARM.exidx.text.do_mpa_task) refers to main.o(.text.do_mpa_task) for [Anonymous Symbol]
    main.o(.text.request_data) refers to rs422_protocol.o(.text.receive_packet) for receive_packet
    main.o(.text.request_data) refers to main.o(.text.do_mpa_task) for do_mpa_task
    main.o(.text.request_data) refers to rs422_protocol.o(.text.protocol_do_cmds) for protocol_do_cmds
    main.o(.text.request_data) refers to rs422_protocol.o(.text.transmit_packet) for transmit_packet
    main.o(.text.request_data) refers to 1273pv19t.o(.bss.adc_1) for adc_1
    main.o(.ARM.exidx.text.request_data) refers to main.o(.text.request_data) for [Anonymous Symbol]
    rs422_protocol.o(.text.transmit_packet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rs422_protocol.o(.text.transmit_packet) refers to rs422_protocol.o(.text.crc32) for crc32
    rs422_protocol.o(.text.transmit_packet) refers to uart.o(.text.uart_write) for uart_write
    rs422_protocol.o(.text.transmit_packet) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.ARM.exidx.text.transmit_packet) refers to rs422_protocol.o(.text.transmit_packet) for [Anonymous Symbol]
    rs422_protocol.o(.text.crc32) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.ARM.exidx.text.crc32) refers to rs422_protocol.o(.text.crc32) for [Anonymous Symbol]
    rs422_protocol.o(.text.receive_packet) refers to rt_memclr.o(.text) for __aeabi_memclr
    rs422_protocol.o(.text.receive_packet) refers to uart.o(.text.uart_read) for uart_read
    rs422_protocol.o(.text.receive_packet) refers to rs422_protocol.o(.text.error_handler) for error_handler
    rs422_protocol.o(.text.receive_packet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rs422_protocol.o(.text.receive_packet) refers to rs422_protocol.o(.text.crc32) for crc32
    rs422_protocol.o(.text.receive_packet) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.ARM.exidx.text.receive_packet) refers to rs422_protocol.o(.text.receive_packet) for [Anonymous Symbol]
    rs422_protocol.o(.text.error_handler) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.ARM.exidx.text.error_handler) refers to rs422_protocol.o(.text.error_handler) for [Anonymous Symbol]
    rs422_protocol.o(.text.protocol_do_cmds) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.text.protocol_do_cmds) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rs422_protocol.o(.text.protocol_do_cmds) refers to external_ram.o(.text.init_external_ram_space) for init_external_ram_space
    rs422_protocol.o(.ARM.exidx.text.protocol_do_cmds) refers to rs422_protocol.o(.text.protocol_do_cmds) for [Anonymous Symbol]
    rs422_protocol.o(.text.fill_crc32_table) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    rs422_protocol.o(.ARM.exidx.text.fill_crc32_table) refers to rs422_protocol.o(.text.fill_crc32_table) for [Anonymous Symbol]
    rs422_protocol.o(.ARM.exidx.text.htonl) refers to rs422_protocol.o(.text.htonl) for [Anonymous Symbol]
    rs422_protocol.o(.ARM.exidx.text.htons) refers to rs422_protocol.o(.text.htons) for [Anonymous Symbol]
    timer.o(.text.timer1_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    timer.o(.text.timer1_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for TIMER_CntStructInit
    timer.o(.text.timer1_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for TIMER_CntInit
    timer.o(.text.timer1_init) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for TIMER_BRGInit
    timer.o(.text.timer1_init) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for TIMER_Cmd
    timer.o(.ARM.exidx.text.timer1_init) refers to timer.o(.text.timer1_init) for [Anonymous Symbol]
    timer.o(.text.timer3_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    timer.o(.text.timer3_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for TIMER_CntStructInit
    timer.o(.text.timer3_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for TIMER_CntInit
    timer.o(.text.timer3_init) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for TIMER_BRGInit
    timer.o(.text.timer3_init) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for TIMER_Cmd
    timer.o(.ARM.exidx.text.timer3_init) refers to timer.o(.text.timer3_init) for [Anonymous Symbol]
    timer.o(.text.timer2_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for TIMER_CntStructInit
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for TIMER_CntInit
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_ChnStructInit) for TIMER_ChnStructInit
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_ChnInit) for TIMER_ChnInit
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd) for TIMER_ChnCCR1_Cmd
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_ITConfig) for TIMER_ITConfig
    timer.o(.text.timer2_init) refers to timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for TIMER_BRGInit
    timer.o(.text.timer2_init) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for TIMER_Cmd
    timer.o(.ARM.exidx.text.timer2_init) refers to timer.o(.text.timer2_init) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to timer.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    timer.o(.text.timer_init) refers to timer.o(.text.timer1_init) for timer1_init
    timer.o(.text.timer_init) refers to timer.o(.text.timer2_init) for timer2_init
    timer.o(.text.timer_init) refers to timer.o(.text.timer3_init) for timer3_init
    timer.o(.ARM.exidx.text.timer_init) refers to timer.o(.text.timer_init) for [Anonymous Symbol]
    timer.o(.text.TIMER2_IRQHandler) refers to mdr32fxqi_timer.o(.text.TIMER_GetITStatus) for TIMER_GetITStatus
    timer.o(.text.TIMER2_IRQHandler) refers to mdr32fxqi_timer.o(.text.TIMER_ITConfig) for TIMER_ITConfig
    timer.o(.text.TIMER2_IRQHandler) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    timer.o(.text.TIMER2_IRQHandler) refers to mdr32fxqi_timer.o(.text.TIMER_ClearFlag) for TIMER_ClearFlag
    timer.o(.text.TIMER2_IRQHandler) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for TIMER_SetCounter
    timer.o(.text.TIMER2_IRQHandler) refers to timer.o(.bss.timer_2) for timer_2
    timer.o(.text.TIMER2_IRQHandler) refers to 1273pv19t.o(.bss.adc_1) for adc_1
    timer.o(.text.TIMER2_IRQHandler) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    timer.o(.text.TIMER2_IRQHandler) refers to spi.o(EXECUTABLE_MEMORY_SECTION) for spi_1
    timer.o(.ARM.exidx.text.TIMER2_IRQHandler) refers to timer.o(.text.TIMER2_IRQHandler) for [Anonymous Symbol]
    timer.o(.text.delay_milli) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for TIMER_SetCounter
    timer.o(.text.delay_milli) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    timer.o(.ARM.exidx.text.delay_milli) refers to timer.o(.text.delay_milli) for [Anonymous Symbol]
    timer.o(.text.delay_micro) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    timer.o(.text.delay_micro) refers to abs.o(.text) for abs
    timer.o(.ARM.exidx.text.delay_micro) refers to timer.o(.text.delay_micro) for [Anonymous Symbol]
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for UART_ReceiveData
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    uart.o(.text.UART1_IRQHandler) refers to uart.o(.bss.UART1) for UART1
    uart.o(.ARM.exidx.text.UART1_IRQHandler) refers to uart.o(.text.UART1_IRQHandler) for [Anonymous Symbol]
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for UART_ReceiveData
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    uart.o(.text.UART2_IRQHandler) refers to uart.o(.bss.UART2) for UART2
    uart.o(.ARM.exidx.text.UART2_IRQHandler) refers to uart.o(.text.UART2_IRQHandler) for [Anonymous Symbol]
    uart.o(.text.uart_gpio_config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    uart.o(.text.uart_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for PORT_StructInit
    uart.o(.text.uart_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_Init) for PORT_Init
    uart.o(.text.uart_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_WriteBit) for PORT_WriteBit
    uart.o(.ARM.exidx.text.uart_gpio_config) refers to uart.o(.text.uart_gpio_config) for [Anonymous Symbol]
    uart.o(.text.uart_init) refers to uart.o(.text.uart_gpio_config) for uart_gpio_config
    uart.o(.text.uart_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_BRGInit) for UART_BRGInit
    uart.o(.text.uart_init) refers to uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_Init) for UART_Init
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_ITConfig) for UART_ITConfig
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_Cmd) for UART_Cmd
    uart.o(.ARM.exidx.text.uart_init) refers to uart.o(.text.uart_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    uart.o(.text.uart_write) refers to mdr32fxqi_port.o(.text.PORT_WriteBit) for PORT_WriteBit
    uart.o(.text.uart_write) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for TIMER_SetCounter
    uart.o(.text.uart_write) refers to mdr32fxqi_uart.o(.text.UART_SendData) for UART_SendData
    uart.o(.text.uart_write) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.uart_write) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    uart.o(.text.uart_write) refers to timer.o(.text.delay_micro) for delay_micro
    uart.o(.ARM.exidx.text.uart_write) refers to uart.o(.text.uart_write) for [Anonymous Symbol]
    uart.o(.text.uart_read) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for TIMER_SetCounter
    uart.o(.text.uart_read) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    uart.o(.text.uart_read) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    uart.o(.ARM.exidx.text.uart_read) refers to uart.o(.text.uart_read) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_pos) refers to uart.o(.text.uart_set_pos) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_read_pos) refers to uart.o(.text.uart_read_pos) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_get_buf_counter) refers to uart.o(.text.uart_get_buf_counter) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_clean) refers to uart.o(.text.uart_clean) for [Anonymous Symbol]
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_StructInit) for DMA_StructInit
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_Init) for DMA_Init
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_uart.o(.text.UART_DMACmd) for UART_DMACmd
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_Cmd) for DMA_Cmd
    uart.o(.text.DMA_UART_RX_init) refers to uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(.ARM.exidx.text.DMA_UART_RX_init) refers to uart.o(.text.DMA_UART_RX_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_read_timeout) refers to uart.o(.text.uart_set_read_timeout) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_write_timeout) refers to uart.o(.text.uart_set_write_timeout) for [Anonymous Symbol]
    ebc.o(.text.ebc_gpio_config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    ebc.o(.text.ebc_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_Init) for PORT_Init
    ebc.o(.ARM.exidx.text.ebc_gpio_config) refers to ebc.o(.text.ebc_gpio_config) for [Anonymous Symbol]
    ebc.o(.text.ebc_init) refers to ebc.o(.text.ebc_gpio_config) for ebc_gpio_config
    ebc.o(.text.ebc_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    ebc.o(.text.ebc_init) refers to mdr32fxqi_ebc.o(.text.EBC_StructInit) for EBC_StructInit
    ebc.o(.text.ebc_init) refers to mdr32fxqi_ebc.o(.text.EBC_Init) for EBC_Init
    ebc.o(.text.ebc_init) refers to mdr32fxqi_ebc.o(.text.EBC_MemRegionStructInit) for EBC_MemRegionStructInit
    ebc.o(.text.ebc_init) refers to mdr32fxqi_ebc.o(.text.EBC_MemRegionInit) for EBC_MemRegionInit
    ebc.o(.ARM.exidx.text.ebc_init) refers to ebc.o(.text.ebc_init) for [Anonymous Symbol]
    external_ram.o(.text.init_external_ram_space) refers to rt_memclr.o(.text) for __aeabi_memclr
    external_ram.o(.text.init_external_ram_space) refers to strncpy.o(.text) for strncpy
    external_ram.o(.text.init_external_ram_space) refers to main.o(.bss.ram_space_pointer) for ram_space_pointer
    external_ram.o(.text.init_external_ram_space) refers to rs422_protocol.o(.text.fill_crc32_table) for fill_crc32_table
    external_ram.o(.text.init_external_ram_space) refers to external_ram.o(.rodata.str1.1) for [Anonymous Symbol]
    external_ram.o(.ARM.exidx.text.init_external_ram_space) refers to external_ram.o(.text.init_external_ram_space) for [Anonymous Symbol]
    external_ram.o(.ARM.exidx.text.find_max_halfword) refers to external_ram.o(.text.find_max_halfword) for [Anonymous Symbol]
    1273pv19t.o(.text.adc_gpio_config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    1273pv19t.o(.text.adc_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for PORT_StructInit
    1273pv19t.o(.text.adc_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_Init) for PORT_Init
    1273pv19t.o(.text.adc_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_SetBits) for PORT_SetBits
    1273pv19t.o(.text.adc_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_ResetBits) for PORT_ResetBits
    1273pv19t.o(.ARM.exidx.text.adc_gpio_config) refers to 1273pv19t.o(.text.adc_gpio_config) for [Anonymous Symbol]
    1273pv19t.o(.text.adc_init) refers to 1273pv19t.o(.text.adc_gpio_config) for adc_gpio_config
    1273pv19t.o(.text.adc_init) refers to mdr32fxqi_port.o(.text.PORT_SetBits) for PORT_SetBits
    1273pv19t.o(.text.adc_init) refers to timer.o(.text.delay_milli) for delay_milli
    1273pv19t.o(.text.adc_init) refers to 1273pv19t.o(.text.adc_reset) for adc_reset
    1273pv19t.o(.text.adc_init) refers to mdr32fxqi_ssp.o(.text.SSP_SendData) for SSP_SendData
    1273pv19t.o(.text.adc_init) refers to timer.o(.text.delay_micro) for delay_micro
    1273pv19t.o(.text.adc_init) refers to spi.o(.text.spi_clean_fifo_rx_buf) for spi_clean_fifo_rx_buf
    1273pv19t.o(.ARM.exidx.text.adc_init) refers to 1273pv19t.o(.text.adc_init) for [Anonymous Symbol]
    1273pv19t.o(.text.adc_reset) refers to mdr32fxqi_port.o(.text.PORT_ResetBits) for PORT_ResetBits
    1273pv19t.o(.text.adc_reset) refers to timer.o(.text.delay_milli) for delay_milli
    1273pv19t.o(.text.adc_reset) refers to mdr32fxqi_port.o(.text.PORT_SetBits) for PORT_SetBits
    1273pv19t.o(.ARM.exidx.text.adc_reset) refers to 1273pv19t.o(.text.adc_reset) for [Anonymous Symbol]
    spi.o(.text.spi_gpio_config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    spi.o(.text.spi_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for PORT_StructInit
    spi.o(.text.spi_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_Init) for PORT_Init
    spi.o(.text.spi_gpio_config) refers to mdr32fxqi_port.o(.text.PORT_ResetBits) for PORT_ResetBits
    spi.o(.ARM.exidx.text.spi_gpio_config) refers to spi.o(.text.spi_gpio_config) for [Anonymous Symbol]
    spi.o(.text.spi_init) refers to spi.o(.text.spi_gpio_config) for spi_gpio_config
    spi.o(.text.spi_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    spi.o(.text.spi_init) refers to mdr32fxqi_ssp.o(.text.SSP_StructInit) for SSP_StructInit
    spi.o(.text.spi_init) refers to mdr32fxqi_ssp.o(.text.SSP_BRGInit) for SSP_BRGInit
    spi.o(.text.spi_init) refers to mdr32fxqi_ssp.o(.text.SSP_Init) for SSP_Init
    spi.o(.text.spi_init) refers to spi.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    spi.o(.text.spi_init) refers to mdr32fxqi_ssp.o(.text.SSP_ITConfig) for SSP_ITConfig
    spi.o(.text.spi_init) refers to mdr32fxqi_ssp.o(.text.SSP_Cmd) for SSP_Cmd
    spi.o(.ARM.exidx.text.spi_init) refers to spi.o(.text.spi_init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to spi.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    spi.o(.text.spi_transmit_halfword) refers to mdr32fxqi_ssp.o(.text.SSP_SendData) for SSP_SendData
    spi.o(.text.spi_transmit_halfword) refers to mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus) for SSP_GetFlagStatus
    spi.o(.ARM.exidx.text.spi_transmit_halfword) refers to spi.o(.text.spi_transmit_halfword) for [Anonymous Symbol]
    spi.o(.text.spi_transmit_message) refers to mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus) for SSP_GetFlagStatus
    spi.o(.text.spi_transmit_message) refers to mdr32fxqi_ssp.o(.text.SSP_SendData) for SSP_SendData
    spi.o(.ARM.exidx.text.spi_transmit_message) refers to spi.o(.text.spi_transmit_message) for [Anonymous Symbol]
    spi.o(.text.spi_receive_halfword) refers to mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus) for SSP_GetFlagStatus
    spi.o(.text.spi_receive_halfword) refers to mdr32fxqi_ssp.o(.text.SSP_ReceiveData) for SSP_ReceiveData
    spi.o(.ARM.exidx.text.spi_receive_halfword) refers to spi.o(.text.spi_receive_halfword) for [Anonymous Symbol]
    spi.o(.text.spi_clean_fifo_rx_buf) refers to mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus) for SSP_GetFlagStatus
    spi.o(.ARM.exidx.text.spi_clean_fifo_rx_buf) refers to spi.o(.text.spi_clean_fifo_rx_buf) for [Anonymous Symbol]
    spi.o(.text.dma_spi_rx_init) refers to mdr32fxqi_dma.o(.text.DMA_StructInit) for DMA_StructInit
    spi.o(.text.dma_spi_rx_init) refers to mdr32fxqi_dma.o(.text.DMA_Init) for DMA_Init
    spi.o(.text.dma_spi_rx_init) refers to mdr32fxqi_ssp.o(.text.SSP_DMACmd) for SSP_DMACmd
    spi.o(.text.dma_spi_rx_init) refers to mdr32fxqi_dma.o(.text.DMA_Cmd) for DMA_Cmd
    spi.o(.ARM.exidx.text.dma_spi_rx_init) refers to spi.o(.text.dma_spi_rx_init) for [Anonymous Symbol]
    startup_mdr32f1qi.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(RESET) refers to startup_mdr32f1qi.o(STACK) for __initial_sp
    startup_mdr32f1qi.o(RESET) refers to startup_mdr32f1qi.o(.text) for Reset_Handler
    startup_mdr32f1qi.o(RESET) refers to dma.o(.text.DMA_IRQHandler) for DMA_IRQHandler
    startup_mdr32f1qi.o(RESET) refers to uart.o(.text.UART1_IRQHandler) for UART1_IRQHandler
    startup_mdr32f1qi.o(RESET) refers to uart.o(.text.UART2_IRQHandler) for UART2_IRQHandler
    startup_mdr32f1qi.o(RESET) refers to timer.o(.text.TIMER2_IRQHandler) for TIMER2_IRQHandler
    startup_mdr32f1qi.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(.text) refers to system_mdr32f1qi.o(.text.SystemInit) for SystemInit
    startup_mdr32f1qi.o(.text) refers to __main.o(!!!main) for __main
    startup_mdr32f1qi.o(.text) refers to startup_mdr32f1qi.o(HEAP) for Heap_Mem
    startup_mdr32f1qi.o(.text) refers to startup_mdr32f1qi.o(STACK) for Stack_Mem
    system_mdr32f1qi.o(.text.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    system_mdr32f1qi.o(.text.SystemCoreClockUpdate) refers to system_mdr32f1qi.o(.data.SystemCoreClock) for SystemCoreClock
    system_mdr32f1qi.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mdr32f1qi.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_mdr32f1qi.o(.text.SystemInit) refers to system_mdr32f1qi.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system_mdr32f1qi.o(.ARM.exidx.text.SystemInit) refers to system_mdr32f1qi.o(.text.SystemInit) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DeInit) refers to mdr32fxqi_bkp.o(.text.BKP_DeInit) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTCclkSource) refers to mdr32fxqi_bkp.o(.text.BKP_RTCclkSource) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_WorkPermit) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_WorkPermit) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_Calibration) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_Calibration) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_Reset) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_Reset) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_ITConfig) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetCounter) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_GetCounter) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetCounter) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_SetCounter) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetAlarm) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_SetAlarm) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetDivider) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_GetDivider) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetPrescaler) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_SetPrescaler) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_WaitForUpdate) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_WaitForUpdate) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetFlagStatus) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_ClearFlagStatus) refers to mdr32fxqi_bkp.o(.text.BKP_RTC_ClearFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DUccMode) refers to mdr32fxqi_bkp.o(.text.BKP_DUccMode) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DUccTrim) refers to mdr32fxqi_bkp.o(.text.BKP_DUccTrim) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_SetFlagPOR) refers to mdr32fxqi_bkp.o(.text.BKP_SetFlagPOR) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_FlagPORstatus) refers to mdr32fxqi_bkp.o(.text.BKP_FlagPORstatus) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterSLEEPMode) refers to mdr32fxqi_bkp.o(.text.BKP_EnterSLEEPMode) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_SetTrim) refers to mdr32fxqi_bkp.o(.text.BKP_SetTrim) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_CurrentLimitProtection150mA) refers to mdr32fxqi_bkp.o(.text.BKP_CurrentLimitProtection150mA) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterStandAloneMode) refers to mdr32fxqi_bkp.o(.text.BKP_EnterStandAloneMode) for [Anonymous Symbol]
    mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterSTANDBYMode) refers to mdr32fxqi_bkp.o(.text.BKP_EnterSTANDBYMode) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_DeInit) refers to mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_DeInit) refers to mdr32fxqi_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlDataInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(.text.DMA_SG_Init) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_Init) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_Init) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Init) refers to mdr32fxqi_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_StructInit) refers to mdr32fxqi_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_StructInit) refers to mdr32fxqi_dma.o(.text.DMA_SG_StructInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Cmd) refers to mdr32fxqi_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Request) refers to mdr32fxqi_dma.o(.text.DMA_Request) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_ClearError) refers to mdr32fxqi_dma.o(.text.DMA_ClearError) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetCurrTransferCounter) refers to mdr32fxqi_dma.o(.text.DMA_GetCurrTransferCounter) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to mdr32fxqi_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_DeInit) refers to mdr32fxqi_ebc.o(.text.EBC_DeInit) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_Init) refers to mdr32fxqi_ebc.o(.text.EBC_Init) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_StructInit) refers to mdr32fxqi_ebc.o(.text.EBC_StructInit) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.text.EBC_CalcWaitStates) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_CalcWaitStates) refers to mdr32fxqi_ebc.o(.text.EBC_CalcWaitStates) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.text.EBC_CalcNandCycles) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_CalcNandCycles) refers to mdr32fxqi_ebc.o(.text.EBC_CalcNandCycles) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_GetBusyStatus) refers to mdr32fxqi_ebc.o(.text.EBC_GetBusyStatus) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionStructInit) refers to mdr32fxqi_ebc.o(.text.EBC_MemRegionStructInit) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionInit) refers to mdr32fxqi_ebc.o(.text.EBC_MemRegionInit) for [Anonymous Symbol]
    mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionCMD) refers to mdr32fxqi_ebc.o(.text.EBC_MemRegionCMD) for [Anonymous Symbol]
    mdr32fxqi_eeprom.o(.ARM.exidx.text.EEPROM_SetLatency) refers to mdr32fxqi_eeprom.o(.text.EEPROM_SetLatency) for [Anonymous Symbol]
    mdr32fxqi_eeprom.o(.ARM.exidx.text.EEPROM_GetLatency) refers to mdr32fxqi_eeprom.o(.text.EEPROM_GetLatency) for [Anonymous Symbol]
    mdr32fxqi_eeprom.o(EXECUTABLE_MEMORY_SECTION) refers to mdr32fxqi_eeprom_cache.o(EXECUTABLE_MEMORY_SECTION) for EEPROM_UpdateDCacheAsm
    mdr32fxqi_eeprom.o(.ARM.exidxEXECUTABLE_MEMORY_SECTION) refers to mdr32fxqi_eeprom.o(EXECUTABLE_MEMORY_SECTION) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_DeInit) refers to mdr32fxqi_port.o(.text.PORT_DeInit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_Init) refers to mdr32fxqi_port.o(.text.PORT_Init) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_StructInit) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputDataBit) refers to mdr32fxqi_port.o(.text.PORT_ReadInputDataBit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputData) refers to mdr32fxqi_port.o(.text.PORT_ReadInputData) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_SetBits) refers to mdr32fxqi_port.o(.text.PORT_SetBits) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ResetBits) refers to mdr32fxqi_port.o(.text.PORT_ResetBits) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_WriteBit) refers to mdr32fxqi_port.o(.text.PORT_WriteBit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_Write) refers to mdr32fxqi_port.o(.text.PORT_Write) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) for RST_CLK_WarmDeInit
    mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd) for RST_CLK_HSIcmd
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) for RST_CLK_HSIstatus
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_PCLKcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelection) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetFlagStatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2config) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2status) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIadjust) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIadjust) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIadjust) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIadjust) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLuse) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLuse) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLuse) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkSelection) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkSelection) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSIclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSIclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSEclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSEclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelectionC1) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelectionC1) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetClocksFreq) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_DeInit) refers to mdr32fxqi_ssp.o(.text.SSP_DeInit) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_Init) refers to mdr32fxqi_ssp.o(.text.SSP_Init) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_StructInit) refers to mdr32fxqi_ssp.o(.text.SSP_StructInit) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_Cmd) refers to mdr32fxqi_ssp.o(.text.SSP_Cmd) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ITConfig) refers to mdr32fxqi_ssp.o(.text.SSP_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetITStatus) refers to mdr32fxqi_ssp.o(.text.SSP_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetITStatusMasked) refers to mdr32fxqi_ssp.o(.text.SSP_GetITStatusMasked) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ClearITPendingBit) refers to mdr32fxqi_ssp.o(.text.SSP_ClearITPendingBit) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_DMACmd) refers to mdr32fxqi_ssp.o(.text.SSP_DMACmd) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_SendData) refers to mdr32fxqi_ssp.o(.text.SSP_SendData) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ReceiveData) refers to mdr32fxqi_ssp.o(.text.SSP_ReceiveData) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetFlagStatus) refers to mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_BRGInit) refers to mdr32fxqi_ssp.o(.text.SSP_BRGInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DeInit) refers to mdr32fxqi_timer.o(.text.TIMER_DeInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntInit) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounter) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounter) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntPrescaler) refers to mdr32fxqi_timer.o(.text.TIMER_SetCntPrescaler) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntPrescaler) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntPrescaler) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntAutoreload) refers to mdr32fxqi_timer.o(.text.TIMER_SetCntAutoreload) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntAutoreloadConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CntAutoreloadConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntAutoreload) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntAutoreload) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntEventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CntEventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_FilterSamplingConfig) refers to mdr32fxqi_timer.o(.text.TIMER_FilterSamplingConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CounterModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CounterModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounterDirection) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounterDirection) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRInputConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRInputConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRFilterConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRFilterConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPrescalerConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRPrescalerConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRKPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_BRKPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounterDirection) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounterDirection) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntWriteComplete) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntWriteComplete) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare) refers to mdr32fxqi_timer.o(.text.TIMER_SetChnCompare) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompareConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCompareConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnCapture) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare1) refers to mdr32fxqi_timer.o(.text.TIMER_SetChnCompare1) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompare1Config) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCompare1Config) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture1) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnCapture1) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETR_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_ChnETR_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETRResetConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnETRResetConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnBRKResetConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnBRKResetConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnREFFormatConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnREFFormatConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCapturePrescalerConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCapturePrescalerConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnEventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnEventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnFilterConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnFilterConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnWriteComplete) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnWriteComplete) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_EventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_EventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutDTGConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutDTGConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetFlagStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ClearFlag) refers to mdr32fxqi_timer.o(.text.TIMER_ClearFlag) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DMACmd) refers to mdr32fxqi_timer.o(.text.TIMER_DMACmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ITConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetITStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRGInit) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DeInit) refers to mdr32fxqi_uart.o(.text.UART_DeInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.text.UART_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for RST_CLK_GetClocksFreq
    mdr32fxqi_uart.o(.text.UART_Init) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_Init) refers to mdr32fxqi_uart.o(.text.UART_Init) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_StructInit) refers to mdr32fxqi_uart.o(.text.UART_StructInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_Cmd) refers to mdr32fxqi_uart.o(.text.UART_Cmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ITConfig) refers to mdr32fxqi_uart.o(.text.UART_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatus) refers to mdr32fxqi_uart.o(.text.UART_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatusMasked) refers to mdr32fxqi_uart.o(.text.UART_GetITStatusMasked) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ClearITPendingBit) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMAConfig) refers to mdr32fxqi_uart.o(.text.UART_DMAConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMACmd) refers to mdr32fxqi_uart.o(.text.UART_DMACmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_SendData) refers to mdr32fxqi_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ReceiveData) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_BreakLine) refers to mdr32fxqi_uart.o(.text.UART_BreakLine) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.text.UART_IrDAConfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for RST_CLK_GetClocksFreq
    mdr32fxqi_uart.o(.text.UART_IrDAConfig) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDAConfig) refers to mdr32fxqi_uart.o(.text.UART_IrDAConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDACmd) refers to mdr32fxqi_uart.o(.text.UART_IrDACmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetFlagStatus) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_BRGInit) refers to mdr32fxqi_uart.o(.text.UART_BRGInit) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    strncpy.o(.text) refers to rt_memclr.o(.text) for __rt_memclr
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mdr32f1qi.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing clock.o(.text), (0 bytes).
    Removing clock.o(.ARM.exidx.text.CLOCK_Init), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_common_init), (8 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.do_mpa_task), (8 bytes).
    Removing main.o(.text.request_data), (152 bytes).
    Removing main.o(.ARM.exidx.text.request_data), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rs422_protocol.o(.text), (0 bytes).
    Removing rs422_protocol.o(.text.transmit_packet), (356 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.transmit_packet), (8 bytes).
    Removing rs422_protocol.o(.text.crc32), (100 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.crc32), (8 bytes).
    Removing rs422_protocol.o(.text.receive_packet), (668 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.receive_packet), (8 bytes).
    Removing rs422_protocol.o(.text.error_handler), (776 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.error_handler), (8 bytes).
    Removing rs422_protocol.o(.text.protocol_do_cmds), (2152 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.protocol_do_cmds), (8 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.fill_crc32_table), (8 bytes).
    Removing rs422_protocol.o(.text.htonl), (50 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.htonl), (8 bytes).
    Removing rs422_protocol.o(.text.htons), (38 bytes).
    Removing rs422_protocol.o(.ARM.exidx.text.htons), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.timer1_init), (8 bytes).
    Removing timer.o(.ARM.exidx.text.timer3_init), (8 bytes).
    Removing timer.o(.ARM.exidx.text.timer2_init), (8 bytes).
    Removing timer.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing timer.o(.ARM.exidx.text.timer_init), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER2_IRQHandler), (8 bytes).
    Removing timer.o(.ARM.exidx.text.delay_milli), (8 bytes).
    Removing timer.o(.ARM.exidx.text.delay_micro), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART1_IRQHandler), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART2_IRQHandler), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_gpio_config), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing uart.o(.text.uart_write), (320 bytes).
    Removing uart.o(.ARM.exidx.text.uart_write), (8 bytes).
    Removing uart.o(.text.uart_read), (508 bytes).
    Removing uart.o(.ARM.exidx.text.uart_read), (8 bytes).
    Removing uart.o(.text.uart_set_pos), (56 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_pos), (8 bytes).
    Removing uart.o(.text.uart_read_pos), (12 bytes).
    Removing uart.o(.ARM.exidx.text.uart_read_pos), (8 bytes).
    Removing uart.o(.text.uart_get_buf_counter), (12 bytes).
    Removing uart.o(.ARM.exidx.text.uart_get_buf_counter), (8 bytes).
    Removing uart.o(.text.uart_clean), (22 bytes).
    Removing uart.o(.ARM.exidx.text.uart_clean), (8 bytes).
    Removing uart.o(.ARM.exidx.text.DMA_UART_RX_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_read_timeout), (8 bytes).
    Removing uart.o(.text.uart_set_write_timeout), (22 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_write_timeout), (8 bytes).
    Removing ebc.o(.text), (0 bytes).
    Removing ebc.o(.ARM.exidx.text.ebc_gpio_config), (8 bytes).
    Removing ebc.o(.ARM.exidx.text.ebc_init), (8 bytes).
    Removing external_ram.o(.text), (0 bytes).
    Removing external_ram.o(.ARM.exidx.text.init_external_ram_space), (8 bytes).
    Removing external_ram.o(.ARM.exidx.text.find_max_halfword), (8 bytes).
    Removing 1273pv19t.o(.text), (0 bytes).
    Removing 1273pv19t.o(.ARM.exidx.text.adc_gpio_config), (8 bytes).
    Removing 1273pv19t.o(.ARM.exidx.text.adc_init), (8 bytes).
    Removing 1273pv19t.o(.ARM.exidx.text.adc_reset), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.ARM.exidx.text.spi_gpio_config), (8 bytes).
    Removing spi.o(.ARM.exidx.text.spi_init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing spi.o(.text.spi_transmit_halfword), (50 bytes).
    Removing spi.o(.ARM.exidx.text.spi_transmit_halfword), (8 bytes).
    Removing spi.o(.text.spi_transmit_message), (96 bytes).
    Removing spi.o(.ARM.exidx.text.spi_transmit_message), (8 bytes).
    Removing spi.o(.text.spi_receive_halfword), (46 bytes).
    Removing spi.o(.ARM.exidx.text.spi_receive_halfword), (8 bytes).
    Removing spi.o(.ARM.exidx.text.spi_clean_fifo_rx_buf), (8 bytes).
    Removing spi.o(.ARM.exidx.text.dma_spi_rx_init), (8 bytes).
    Removing system_mdr32f1qi.o(.text), (0 bytes).
    Removing system_mdr32f1qi.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_mdr32f1qi.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text), (0 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_DeInit), (124 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DeInit), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTCclkSource), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTCclkSource), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_WorkPermit), (48 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_WorkPermit), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_Calibration), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_Calibration), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_Reset), (52 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_Reset), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_ITConfig), (56 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_ITConfig), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_GetCounter), (12 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetCounter), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_SetCounter), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetCounter), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_SetAlarm), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetAlarm), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_GetDivider), (12 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetDivider), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_SetPrescaler), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_SetPrescaler), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_WaitForUpdate), (24 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_WaitForUpdate), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_GetFlagStatus), (48 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_RTC_ClearFlagStatus), (36 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_RTC_ClearFlagStatus), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_DUccMode), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DUccMode), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_DUccTrim), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_DUccTrim), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_SetFlagPOR), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_SetFlagPOR), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_FlagPORstatus), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_FlagPORstatus), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_EnterSLEEPMode), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterSLEEPMode), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_SetTrim), (40 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_SetTrim), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_CurrentLimitProtection150mA), (52 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_CurrentLimitProtection150mA), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_EnterStandAloneMode), (16 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterStandAloneMode), (8 bytes).
    Removing mdr32fxqi_bkp.o(.text.BKP_EnterSTANDBYMode), (20 bytes).
    Removing mdr32fxqi_bkp.o(.ARM.exidx.text.BKP_EnterSTANDBYMode), (8 bytes).
    Removing mdr32fxqi_dma.o(.text), (0 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlDataInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_CtrlInit), (76 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit), (28 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_CtrlInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_Init), (260 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_Init), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_StructInit), (38 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_StructInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_Request), (28 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Request), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_ClearError), (12 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_ClearError), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_GetCurrTransferCounter), (80 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetCurrTransferCounter), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_ebc.o(.text), (0 bytes).
    Removing mdr32fxqi_ebc.o(.text.EBC_DeInit), (52 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_DeInit), (8 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_Init), (8 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_StructInit), (8 bytes).
    Removing mdr32fxqi_ebc.o(.text.EBC_CalcWaitStates), (132 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_CalcWaitStates), (8 bytes).
    Removing mdr32fxqi_ebc.o(.text.EBC_CalcNandCycles), (108 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_CalcNandCycles), (8 bytes).
    Removing mdr32fxqi_ebc.o(.text.EBC_GetBusyStatus), (44 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_GetBusyStatus), (8 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionStructInit), (8 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionInit), (8 bytes).
    Removing mdr32fxqi_ebc.o(.text.EBC_MemRegionCMD), (64 bytes).
    Removing mdr32fxqi_ebc.o(.ARM.exidx.text.EBC_MemRegionCMD), (8 bytes).
    Removing mdr32fxqi_eeprom.o(.text), (0 bytes).
    Removing mdr32fxqi_eeprom.o(.text.EEPROM_SetLatency), (24 bytes).
    Removing mdr32fxqi_eeprom.o(.ARM.exidx.text.EEPROM_SetLatency), (8 bytes).
    Removing mdr32fxqi_eeprom.o(.text.EEPROM_GetLatency), (16 bytes).
    Removing mdr32fxqi_eeprom.o(.ARM.exidx.text.EEPROM_GetLatency), (8 bytes).
    Removing mdr32fxqi_eeprom.o(EXECUTABLE_MEMORY_SECTION), (1304 bytes).
    Removing mdr32fxqi_eeprom.o(.ARM.exidxEXECUTABLE_MEMORY_SECTION), (80 bytes).
    Removing mdr32fxqi_eeprom_cache.o(EXECUTABLE_MEMORY_SECTION), (14 bytes).
    Removing mdr32fxqi_port.o(.text), (0 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_DeInit), (42 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_DeInit), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_Init), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_StructInit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_ReadInputDataBit), (50 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputDataBit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_ReadInputData), (12 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputData), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_SetBits), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ResetBits), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_WriteBit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_Write), (16 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_Write), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text), (0 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_DeInit), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_WarmDeInit), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_PCLKcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelection), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2config), (72 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2config), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2status), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEconfig), (72 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIadjust), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIadjust), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIcmd), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIadjust), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIadjust), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLuse), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLconfig), (116 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLuse), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLuse), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLcmd), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkPrescaler), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkSelection), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkSelection), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkPrescaler), (48 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIclkPrescaler), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSIclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSIclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEclkPrescaler), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSEclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSEclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelectionC1), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelectionC1), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetClocksFreq), (8 bytes).
    Removing mdr32fxqi_ssp.o(.text), (0 bytes).
    Removing mdr32fxqi_ssp.o(.text.SSP_DeInit), (36 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_DeInit), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_Init), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_StructInit), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_Cmd), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ITConfig), (8 bytes).
    Removing mdr32fxqi_ssp.o(.text.SSP_GetITStatus), (50 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetITStatus), (8 bytes).
    Removing mdr32fxqi_ssp.o(.text.SSP_GetITStatusMasked), (50 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetITStatusMasked), (8 bytes).
    Removing mdr32fxqi_ssp.o(.text.SSP_ClearITPendingBit), (22 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ClearITPendingBit), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_DMACmd), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_SendData), (8 bytes).
    Removing mdr32fxqi_ssp.o(.text.SSP_ReceiveData), (14 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_ReceiveData), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_ssp.o(.ARM.exidx.text.SSP_BRGInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text), (0 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_DeInit), (162 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DeInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounter), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounter), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCntPrescaler), (18 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntPrescaler), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntPrescaler), (14 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntPrescaler), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCntAutoreload), (16 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntAutoreload), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CntAutoreloadConfig), (48 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntAutoreloadConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntAutoreload), (12 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntAutoreload), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CntEventSourceConfig), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntEventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_FilterSamplingConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_FilterSamplingConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CounterModeConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CounterModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCounterDirection), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounterDirection), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRInputConfig), (66 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRInputConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRFilterConfig), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRFilterConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRPrescalerConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPrescalerConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRPolarityConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_BRKPolarityConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRKPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCounterDirection), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounterDirection), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntWriteComplete), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntWriteComplete), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetChnCompare), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCompareConfig), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompareConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnCapture), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetChnCompare1), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare1), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCompare1Config), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompare1Config), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnCapture1), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture1), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnETR_Cmd), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETR_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnETRResetConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETRResetConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnBRKResetConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnBRKResetConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnREFFormatConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnREFFormatConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCapturePrescalerConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCapturePrescalerConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnEventSourceConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnEventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnFilterConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnFilterConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnWriteComplete), (62 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnWriteComplete), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_EventSourceConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_EventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutInit), (92 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutStructInit), (46 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutConfig), (92 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutSourceConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutModeConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutPolarityConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutConfig), (96 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutSourceConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutModeConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutPolarityConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutDTGConfig), (58 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutDTGConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetStatus), (12 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetFlagStatus), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ClearFlag), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_DMACmd), (136 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DMACmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ITConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetITStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRGInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.text), (0 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_DeInit), (62 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DeInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_StructInit), (42 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_StructInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_Cmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ITConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_GetITStatus), (52 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatus), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_GetITStatusMasked), (50 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatusMasked), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ClearITPendingBit), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_DMAConfig), (28 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMAConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMACmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_SendData), (18 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ReceiveData), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_BreakLine), (48 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_BreakLine), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_IrDAConfig), (60 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDAConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_IrDACmd), (48 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDACmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_BRGInit), (8 bytes).

400 unused section(s) (total 15380 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abs.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strncpy.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    1273pv19t.c                              0x00000000   Number         0  1273pv19t.o ABSOLUTE
    C:\Users\shishov\AppData\Local\Arm\Packs\Milandr\MDR32FxQI\1.0\Libraries\SPL\MDR32FxQI\src\MDR32FxQI_eeprom_cache.S 0x00000000   Number         0  mdr32fxqi_eeprom_cache.o ABSOLUTE
    CLOCK.c                                  0x00000000   Number         0  clock.o ABSOLUTE
    DMA.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    EBC.c                                    0x00000000   Number         0  ebc.o ABSOLUTE
    MDR32FxQI_bkp.c                          0x00000000   Number         0  mdr32fxqi_bkp.o ABSOLUTE
    MDR32FxQI_dma.c                          0x00000000   Number         0  mdr32fxqi_dma.o ABSOLUTE
    MDR32FxQI_ebc.c                          0x00000000   Number         0  mdr32fxqi_ebc.o ABSOLUTE
    MDR32FxQI_eeprom.c                       0x00000000   Number         0  mdr32fxqi_eeprom.o ABSOLUTE
    MDR32FxQI_port.c                         0x00000000   Number         0  mdr32fxqi_port.o ABSOLUTE
    MDR32FxQI_rst_clk.c                      0x00000000   Number         0  mdr32fxqi_rst_clk.o ABSOLUTE
    MDR32FxQI_ssp.c                          0x00000000   Number         0  mdr32fxqi_ssp.o ABSOLUTE
    MDR32FxQI_timer.c                        0x00000000   Number         0  mdr32fxqi_timer.o ABSOLUTE
    MDR32FxQI_uart.c                         0x00000000   Number         0  mdr32fxqi_uart.o ABSOLUTE
    RTE\Device\MDR32F1QI\startup_MDR32F1QI.S 0x00000000   Number         0  startup_mdr32f1qi.o ABSOLUTE
    SPI.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    TIMER.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    UART.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    external_ram.c                           0x00000000   Number         0  external_ram.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    rs422_protocol.c                         0x00000000   Number         0  rs422_protocol.o ABSOLUTE
    system_MDR32F1QI.c                       0x00000000   Number         0  system_mdr32f1qi.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mdr32f1qi.o(RESET)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0000013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000014a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000014e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000014e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000156   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000158   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000158   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000015c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000164   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x0000019c   Section      116  startup_mdr32f1qi.o(.text)
    .text                                    0x00000210   Section        0  abs.o(.text)
    .text                                    0x00000218   Section        0  rt_memcpy.o(.text)
    .text                                    0x0000029a   Section        0  rt_memclr.o(.text)
    .text                                    0x000002dc   Section        0  strncpy.o(.text)
    .text                                    0x00000348   Section      364  aeabi_sdiv.o(.text)
    .text                                    0x000004b4   Section        0  heapauxi.o(.text)
    .text                                    0x000004ba   Section        0  fflti.o(.text)
    .text                                    0x00000518   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000556   Section        0  exit.o(.text)
    .text                                    0x00000568   Section        8  libspace.o(.text)
    .text                                    0x00000570   Section        0  sys_exit.o(.text)
    .text                                    0x0000057c   Section        2  use_no_semi.o(.text)
    .text                                    0x0000057e   Section        0  indicate_semi.o(.text)
    .text                                    0x0000057e   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x000005b8   Section        0  clock.o(.text.CLOCK_Init)
    [Anonymous Symbol]                       0x00000610   Section        0  mdr32fxqi_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x00000644   Section        0  mdr32fxqi_dma.o(.text.DMA_CtrlDataInit)
    [Anonymous Symbol]                       0x000006e4   Section        0  mdr32fxqi_dma.o(.text.DMA_DeInit)
    __arm_cp.0_2                             0x00000720   Number         4  mdr32fxqi_dma.o(.text.DMA_DeInit)
    __arm_cp.0_5                             0x00000724   Number         4  mdr32fxqi_dma.o(.text.DMA_DeInit)
    [Anonymous Symbol]                       0x00000728   Section        0  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_3                            0x00000810   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_4                            0x00000814   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_5                            0x00000818   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_6                            0x0000081c   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_7                            0x00000820   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    [Anonymous Symbol]                       0x00000824   Section        0  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_0                             0x00000930   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_1                             0x00000934   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_2                             0x00000938   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_3                             0x0000093c   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_4                             0x00000940   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_5                             0x00000944   Number         4  dma.o(.text.DMA_IRQHandler)
    [Anonymous Symbol]                       0x00000948   Section        0  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_0                             0x00000a34   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_1                             0x00000a38   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_2                             0x00000a3c   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_3                             0x00000a40   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_5                             0x00000a44   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_7                             0x00000a48   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_8                             0x00000a4c   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_9                             0x00000a50   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_10                            0x00000a54   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_11                            0x00000a58   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x00000a5c   Section        0  mdr32fxqi_dma.o(.text.DMA_StructInit)
    [Anonymous Symbol]                       0x00000a80   Section        0  uart.o(.text.DMA_UART_RX_init)
    __arm_cp.11_0                            0x00000b2c   Number         4  uart.o(.text.DMA_UART_RX_init)
    __arm_cp.11_1                            0x00000b30   Number         4  uart.o(.text.DMA_UART_RX_init)
    [Anonymous Symbol]                       0x00000b34   Section        0  dma.o(.text.DMA_common_init)
    __arm_cp.0_0                             0x00000b5c   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_1                             0x00000b60   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_2                             0x00000b64   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_3                             0x00000b68   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_4                             0x00000b6c   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_5                             0x00000b70   Number         4  dma.o(.text.DMA_common_init)
    [Anonymous Symbol]                       0x00000b74   Section        0  mdr32fxqi_ebc.o(.text.EBC_Init)
    __arm_cp.1_0                             0x00000bcc   Number         4  mdr32fxqi_ebc.o(.text.EBC_Init)
    __arm_cp.1_1                             0x00000bd0   Number         4  mdr32fxqi_ebc.o(.text.EBC_Init)
    [Anonymous Symbol]                       0x00000bd4   Section        0  mdr32fxqi_ebc.o(.text.EBC_MemRegionInit)
    __arm_cp.7_0                             0x00000c10   Number         4  mdr32fxqi_ebc.o(.text.EBC_MemRegionInit)
    [Anonymous Symbol]                       0x00000c14   Section        0  mdr32fxqi_ebc.o(.text.EBC_MemRegionStructInit)
    [Anonymous Symbol]                       0x00000c32   Section        0  mdr32fxqi_ebc.o(.text.EBC_StructInit)
    [Anonymous Symbol]                       0x00000c6c   Section        0  mdr32fxqi_port.o(.text.PORT_Init)
    __arm_cp.1_0                             0x00000db4   Number         4  mdr32fxqi_port.o(.text.PORT_Init)
    [Anonymous Symbol]                       0x00000db8   Section        0  mdr32fxqi_port.o(.text.PORT_ResetBits)
    [Anonymous Symbol]                       0x00000dc8   Section        0  mdr32fxqi_port.o(.text.PORT_SetBits)
    [Anonymous Symbol]                       0x00000dd8   Section        0  mdr32fxqi_port.o(.text.PORT_StructInit)
    __arm_cp.2_0                             0x00000e0c   Number         4  mdr32fxqi_port.o(.text.PORT_StructInit)
    [Anonymous Symbol]                       0x00000e10   Section        0  mdr32fxqi_port.o(.text.PORT_WriteBit)
    [Anonymous Symbol]                       0x00000e38   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd)
    [Anonymous Symbol]                       0x00000e6c   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    __arm_cp.17_1                            0x00000edc   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    [Anonymous Symbol]                       0x00000ee0   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus)
    [Anonymous Symbol]                       0x00000f44   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse)
    [Anonymous Symbol]                       0x00000f7c   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler)
    [Anonymous Symbol]                       0x00000fa4   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection)
    [Anonymous Symbol]                       0x00000fcc   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit)
    [Anonymous Symbol]                       0x00000ff0   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_0                            0x00001244   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_1                            0x00001248   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_2                            0x0000124c   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_3                            0x00001250   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_4                            0x00001254   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    [Anonymous Symbol]                       0x00001258   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    __arm_cp.8_1                             0x000012a8   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    [Anonymous Symbol]                       0x000012ac   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig)
    [Anonymous Symbol]                       0x000012f0   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus)
    [Anonymous Symbol]                       0x00001354   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd)
    __arm_cp.3_0                             0x00001390   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd)
    [Anonymous Symbol]                       0x00001394   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus)
    [Anonymous Symbol]                       0x000013f8   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd)
    [Anonymous Symbol]                       0x00001424   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_1                             0x00001488   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_2                             0x0000148c   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_3                             0x00001490   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_4                             0x00001494   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_5                             0x00001498   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    __arm_cp.1_7                             0x0000149c   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    [Anonymous Symbol]                       0x000014a0   Section        0  mdr32fxqi_ssp.o(.text.SSP_BRGInit)
    __arm_cp.12_1                            0x0000153c   Number         4  mdr32fxqi_ssp.o(.text.SSP_BRGInit)
    __arm_cp.12_2                            0x00001540   Number         4  mdr32fxqi_ssp.o(.text.SSP_BRGInit)
    __arm_cp.12_3                            0x00001544   Number         4  mdr32fxqi_ssp.o(.text.SSP_BRGInit)
    [Anonymous Symbol]                       0x00001548   Section        0  mdr32fxqi_ssp.o(.text.SSP_Cmd)
    __arm_cp.3_0                             0x00001574   Number         4  mdr32fxqi_ssp.o(.text.SSP_Cmd)
    [Anonymous Symbol]                       0x00001578   Section        0  mdr32fxqi_ssp.o(.text.SSP_DMACmd)
    [Anonymous Symbol]                       0x000015a8   Section        0  mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus)
    [Anonymous Symbol]                       0x000015da   Section        0  mdr32fxqi_ssp.o(.text.SSP_ITConfig)
    [Anonymous Symbol]                       0x00001608   Section        0  mdr32fxqi_ssp.o(.text.SSP_Init)
    [Anonymous Symbol]                       0x00001648   Section        0  mdr32fxqi_ssp.o(.text.SSP_SendData)
    [Anonymous Symbol]                       0x0000165a   Section        0  mdr32fxqi_ssp.o(.text.SSP_StructInit)
    [Anonymous Symbol]                       0x00001688   Section        0  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_1                             0x00001738   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_2                             0x0000173c   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_4                             0x00001740   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_5                             0x00001744   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00001748   Section        0  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_0                             0x00001784   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_1                             0x00001788   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_2                             0x0000178c   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_3                             0x00001790   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_4                             0x00001794   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_5                             0x00001798   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_6                             0x0000179c   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_7                             0x000017a0   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_8                             0x000017a4   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_9                             0x000017a8   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_10                            0x000017ac   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_11                            0x000017b0   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000017b4   Section        0  timer.o(.text.TIMER2_IRQHandler)
    __arm_cp.5_0                             0x000018cc   Number         4  timer.o(.text.TIMER2_IRQHandler)
    __arm_cp.5_1                             0x000018d0   Number         4  timer.o(.text.TIMER2_IRQHandler)
    __arm_cp.5_2                             0x000018d4   Number         4  timer.o(.text.TIMER2_IRQHandler)
    __arm_cp.5_3                             0x000018d8   Number         4  timer.o(.text.TIMER2_IRQHandler)
    __arm_cp.5_4                             0x000018dc   Number         4  timer.o(.text.TIMER2_IRQHandler)
    [Anonymous Symbol]                       0x000018e0   Section        0  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_0                            0x000019d4   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_1                            0x000019d8   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_2                            0x000019dc   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_3                            0x000019e0   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_4                            0x000019e4   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_5                            0x000019e8   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    [Anonymous Symbol]                       0x000019ec   Section        0  mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd)
    [Anonymous Symbol]                       0x00001a3c   Section        0  mdr32fxqi_timer.o(.text.TIMER_ChnInit)
    [Anonymous Symbol]                       0x00001ab6   Section        0  mdr32fxqi_timer.o(.text.TIMER_ChnStructInit)
    [Anonymous Symbol]                       0x00001af0   Section        0  mdr32fxqi_timer.o(.text.TIMER_ClearFlag)
    [Anonymous Symbol]                       0x00001b02   Section        0  mdr32fxqi_timer.o(.text.TIMER_Cmd)
    [Anonymous Symbol]                       0x00001b36   Section        0  mdr32fxqi_timer.o(.text.TIMER_CntInit)
    [Anonymous Symbol]                       0x00001b8e   Section        0  mdr32fxqi_timer.o(.text.TIMER_CntStructInit)
    [Anonymous Symbol]                       0x00001bc8   Section        0  mdr32fxqi_timer.o(.text.TIMER_GetCounter)
    [Anonymous Symbol]                       0x00001bd4   Section        0  mdr32fxqi_timer.o(.text.TIMER_GetITStatus)
    [Anonymous Symbol]                       0x00001c0e   Section        0  mdr32fxqi_timer.o(.text.TIMER_ITConfig)
    [Anonymous Symbol]                       0x00001c44   Section        0  mdr32fxqi_timer.o(.text.TIMER_SetCounter)
    [Anonymous Symbol]                       0x00001c54   Section        0  uart.o(.text.UART1_IRQHandler)
    __arm_cp.0_0                             0x00001c94   Number         4  uart.o(.text.UART1_IRQHandler)
    [Anonymous Symbol]                       0x00001c98   Section        0  uart.o(.text.UART2_IRQHandler)
    __arm_cp.1_0                             0x00001cd8   Number         4  uart.o(.text.UART2_IRQHandler)
    __arm_cp.1_1                             0x00001cdc   Number         4  uart.o(.text.UART2_IRQHandler)
    [Anonymous Symbol]                       0x00001ce0   Section        0  mdr32fxqi_uart.o(.text.UART_BRGInit)
    __arm_cp.16_0                            0x00001d50   Number         4  mdr32fxqi_uart.o(.text.UART_BRGInit)
    [Anonymous Symbol]                       0x00001d54   Section        0  mdr32fxqi_uart.o(.text.UART_ClearITPendingBit)
    [Anonymous Symbol]                       0x00001d68   Section        0  mdr32fxqi_uart.o(.text.UART_Cmd)
    __arm_cp.3_0                             0x00001d94   Number         4  mdr32fxqi_uart.o(.text.UART_Cmd)
    [Anonymous Symbol]                       0x00001d98   Section        0  mdr32fxqi_uart.o(.text.UART_DMACmd)
    [Anonymous Symbol]                       0x00001dc8   Section        0  mdr32fxqi_uart.o(.text.UART_GetFlagStatus)
    [Anonymous Symbol]                       0x00001dfa   Section        0  mdr32fxqi_uart.o(.text.UART_ITConfig)
    [Anonymous Symbol]                       0x00001e28   Section        0  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_0                             0x00001f2c   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_1                             0x00001f30   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_2                             0x00001f34   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_3                             0x00001f38   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x00001f3c   Section        0  mdr32fxqi_uart.o(.text.UART_ReceiveData)
    __NVIC_ClearPendingIRQ                   0x00001f4d   Thumb Code    40  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x00001f4c   Section        0  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.1_0                             0x00001f74   Number         4  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_DisableIRQ                        0x00001f79   Thumb Code    48  spi.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x00001f78   Section        0  spi.o(.text.__NVIC_DisableIRQ)
    __arm_cp.2_0                             0x00001fa8   Number         4  spi.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x00001fad   Thumb Code    40  timer.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001fac   Section        0  timer.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00001fd5   Thumb Code    40  uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001fd4   Section        0  uart.o(.text.__NVIC_EnableIRQ)
    __arm_cp.4_0                             0x00001ffc   Number         4  uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00002000   Section        0  1273pv19t.o(.text.adc_gpio_config)
    __arm_cp.0_0                             0x000020b0   Number         4  1273pv19t.o(.text.adc_gpio_config)
    __arm_cp.0_2                             0x000020b4   Number         4  1273pv19t.o(.text.adc_gpio_config)
    [Anonymous Symbol]                       0x000020b8   Section        0  1273pv19t.o(.text.adc_init)
    __arm_cp.1_1                             0x00002148   Number         4  1273pv19t.o(.text.adc_init)
    __arm_cp.1_2                             0x0000214c   Number         4  1273pv19t.o(.text.adc_init)
    __arm_cp.1_3                             0x00002150   Number         4  1273pv19t.o(.text.adc_init)
    __arm_cp.1_4                             0x00002154   Number         4  1273pv19t.o(.text.adc_init)
    __arm_cp.1_5                             0x00002158   Number         4  1273pv19t.o(.text.adc_init)
    [Anonymous Symbol]                       0x0000215c   Section        0  1273pv19t.o(.text.adc_reset)
    __arm_cp.2_0                             0x00002180   Number         4  1273pv19t.o(.text.adc_reset)
    [Anonymous Symbol]                       0x00002184   Section        0  timer.o(.text.delay_micro)
    __arm_cp.7_0                             0x000021b0   Number         4  timer.o(.text.delay_micro)
    [Anonymous Symbol]                       0x000021b4   Section        0  timer.o(.text.delay_milli)
    __arm_cp.6_0                             0x000021dc   Number         4  timer.o(.text.delay_milli)
    [Anonymous Symbol]                       0x000021e0   Section        0  spi.o(.text.dma_spi_rx_init)
    __arm_cp.7_0                             0x00002284   Number         4  spi.o(.text.dma_spi_rx_init)
    __arm_cp.7_1                             0x00002288   Number         4  spi.o(.text.dma_spi_rx_init)
    [Anonymous Symbol]                       0x0000228c   Section        0  main.o(.text.do_mpa_task)
    __arm_cp.1_1                             0x00002434   Number         4  main.o(.text.do_mpa_task)
    __arm_cp.1_2                             0x00002438   Number         4  main.o(.text.do_mpa_task)
    [Anonymous Symbol]                       0x0000243c   Section        0  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_0                             0x00002534   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_1                             0x00002538   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_2                             0x0000253c   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_3                             0x00002540   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_4                             0x00002544   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_5                             0x00002548   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_6                             0x0000254c   Number         4  ebc.o(.text.ebc_gpio_config)
    __arm_cp.0_7                             0x00002550   Number         4  ebc.o(.text.ebc_gpio_config)
    [Anonymous Symbol]                       0x00002554   Section        0  ebc.o(.text.ebc_init)
    [Anonymous Symbol]                       0x00002598   Section        0  rs422_protocol.o(.text.fill_crc32_table)
    __arm_cp.5_0                             0x00002614   Number         4  rs422_protocol.o(.text.fill_crc32_table)
    __arm_cp.5_1                             0x00002618   Number         4  rs422_protocol.o(.text.fill_crc32_table)
    __arm_cp.5_2                             0x0000261c   Number         4  rs422_protocol.o(.text.fill_crc32_table)
    [Anonymous Symbol]                       0x00002620   Section        0  external_ram.o(.text.find_max_halfword)
    [Anonymous Symbol]                       0x0000266c   Section        0  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_17                            0x00002978   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_18                            0x0000297c   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_3                             0x00002ad4   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_4                             0x00002ad8   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_5                             0x00002adc   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_6                             0x00002ae0   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_7                             0x00002ae4   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_8                             0x00002ae8   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_9                             0x00002aec   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_10                            0x00002af0   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_11                            0x00002af4   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_12                            0x00002af8   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_13                            0x00002afc   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_14                            0x00002b00   Number         4  external_ram.o(.text.init_external_ram_space)
    __arm_cp.0_15                            0x00002b04   Number         4  external_ram.o(.text.init_external_ram_space)
    [Anonymous Symbol]                       0x00002b08   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00002cc8   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x00002ccc   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x00002cd0   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x00002cd4   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x00002cd8   Number         4  main.o(.text.main)
    __arm_cp.0_5                             0x00002cdc   Number         4  main.o(.text.main)
    __arm_cp.0_6                             0x00002ce0   Number         4  main.o(.text.main)
    __arm_cp.0_7                             0x00002ce4   Number         4  main.o(.text.main)
    __arm_cp.0_8                             0x00002ce8   Number         4  main.o(.text.main)
    __arm_cp.0_9                             0x00002cec   Number         4  main.o(.text.main)
    __arm_cp.0_10                            0x00002cf0   Number         4  main.o(.text.main)
    __arm_cp.0_11                            0x00002cf4   Number         4  main.o(.text.main)
    __arm_cp.0_12                            0x00002cf8   Number         4  main.o(.text.main)
    __arm_cp.0_13                            0x00002cfc   Number         4  main.o(.text.main)
    __arm_cp.0_14                            0x00002d00   Number         4  main.o(.text.main)
    __arm_cp.0_15                            0x00002d04   Number         4  main.o(.text.main)
    __arm_cp.0_16                            0x00002d08   Number         4  main.o(.text.main)
    __arm_cp.0_17                            0x00002d0c   Number         4  main.o(.text.main)
    __arm_cp.0_18                            0x00002d10   Number         4  main.o(.text.main)
    __arm_cp.0_19                            0x00002d14   Number         4  main.o(.text.main)
    __arm_cp.0_20                            0x00002d18   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x00002d1c   Section        0  spi.o(.text.spi_clean_fifo_rx_buf)
    [Anonymous Symbol]                       0x00002d44   Section        0  spi.o(.text.spi_gpio_config)
    __arm_cp.0_0                             0x00002dc0   Number         4  spi.o(.text.spi_gpio_config)
    [Anonymous Symbol]                       0x00002dc4   Section        0  spi.o(.text.spi_init)
    [Anonymous Symbol]                       0x00002e48   Section        0  timer.o(.text.timer1_init)
    [Anonymous Symbol]                       0x00002e92   Section        0  timer.o(.text.timer2_init)
    [Anonymous Symbol]                       0x00002f5a   Section        0  timer.o(.text.timer3_init)
    [Anonymous Symbol]                       0x00002fa4   Section        0  timer.o(.text.timer_init)
    __arm_cp.4_0                             0x00002ff0   Number         4  timer.o(.text.timer_init)
    __arm_cp.4_1                             0x00002ff4   Number         4  timer.o(.text.timer_init)
    __arm_cp.4_2                             0x00002ff8   Number         4  timer.o(.text.timer_init)
    [Anonymous Symbol]                       0x00002ffc   Section        0  uart.o(.text.uart_gpio_config)
    __arm_cp.2_0                             0x000030cc   Number         4  uart.o(.text.uart_gpio_config)
    __arm_cp.2_1                             0x000030d0   Number         4  uart.o(.text.uart_gpio_config)
    __arm_cp.2_2                             0x000030d4   Number         4  uart.o(.text.uart_gpio_config)
    [Anonymous Symbol]                       0x000030d8   Section        0  uart.o(.text.uart_init)
    [Anonymous Symbol]                       0x00003186   Section        0  uart.o(.text.uart_set_read_timeout)
    x$fpl$fadd                               0x0000319c   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x000031a9   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fmul                               0x00003228   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$fsub                               0x000032d8   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x000032e5   Thumb Code     0  faddsub.o(x$fpl$fsub)
    [Anonymous Symbol]                       0x000033a8   Section        0  external_ram.o(.rodata.str1.1)
    x$fpl$usenofp                            0x000033a8   Section        0  usenofp.o(x$fpl$usenofp)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    Heap_Mem                                 0x20000250   Data        4096  startup_mdr32f1qi.o(HEAP)
    HEAP                                     0x20000250   Section     4096  startup_mdr32f1qi.o(HEAP)
    Stack_Mem                                0x20001250   Data        4096  startup_mdr32f1qi.o(STACK)
    STACK                                    0x20001250   Section     4096  startup_mdr32f1qi.o(STACK)
    __initial_sp                             0x20002250   Data           0  startup_mdr32f1qi.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mdr32f1qi.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0000013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0000014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000157   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000165   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000165   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x0000019d   Thumb Code     8  startup_mdr32f1qi.o(.text)
    NMI_Handler                              0x000001a5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    HardFault_Handler                        0x000001a7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SVC_Handler                              0x000001a9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    PendSV_Handler                           0x000001ab   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SysTick_Handler                          0x000001ad   Thumb Code     2  startup_mdr32f1qi.o(.text)
    MIL_STD_1553B2_IRQHandler                0x000001af   Thumb Code     2  startup_mdr32f1qi.o(.text)
    MIL_STD_1553B1_IRQHandler                0x000001b1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    USB_IRQHandler                           0x000001b3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    CAN1_IRQHandler                          0x000001b5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    CAN2_IRQHandler                          0x000001b7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP1_IRQHandler                          0x000001bf   Thumb Code     2  startup_mdr32f1qi.o(.text)
    BUSY_IRQHandler                          0x000001c1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429R_IRQHandler                     0x000001c3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    POWER_IRQHandler                         0x000001c5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    WWDG_IRQHandler                          0x000001c7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER4_IRQHandler                        0x000001c9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER1_IRQHandler                        0x000001cb   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER3_IRQHandler                        0x000001cf   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ADC_IRQHandler                           0x000001d1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ETHERNET_IRQHandler                      0x000001d3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP3_IRQHandler                          0x000001d5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP2_IRQHandler                          0x000001d7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T1_IRQHandler                    0x000001d9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T2_IRQHandler                    0x000001db   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T3_IRQHandler                    0x000001dd   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T4_IRQHandler                    0x000001df   Thumb Code     2  startup_mdr32f1qi.o(.text)
    BKP_IRQHandler                           0x000001e1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT1_IRQHandler                      0x000001e3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT2_IRQHandler                      0x000001e5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT3_IRQHandler                      0x000001e7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT4_IRQHandler                      0x000001e9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    __user_initial_stackheap                 0x000001ed   Thumb Code     0  startup_mdr32f1qi.o(.text)
    abs                                      0x00000211   Thumb Code     8  abs.o(.text)
    __aeabi_memcpy                           0x00000219   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x00000219   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0000029b   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x000002b5   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x000002d3   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x000002d3   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x000002d7   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x000002d7   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x000002d7   Thumb Code     4  rt_memclr.o(.text)
    strncpy                                  0x000002dd   Thumb Code   104  strncpy.o(.text)
    __aeabi_uidiv                            0x00000349   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x00000349   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x0000035d   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x0000035d   Thumb Code   338  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x000004b5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000004b7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000004b9   Thumb Code     2  heapauxi.o(.text)
    __aeabi_i2f_normalise                    0x000004bb   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x00000503   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x00000503   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x00000513   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x00000513   Thumb Code     0  fflti.o(.text)
    __user_setup_stackheap                   0x00000519   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000557   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x00000569   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000569   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000569   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000571   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0000057d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000057d   Thumb Code     2  use_no_semi.o(.text)
    __decompress                             0x0000057f   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0000057f   Thumb Code    58  __dczerorl.o(.text)
    __semihosting_library_function           0x0000057f   Thumb Code     0  indicate_semi.o(.text)
    CLOCK_Init                               0x000005b9   Thumb Code    86  clock.o(.text.CLOCK_Init)
    DMA_Cmd                                  0x00000611   Thumb Code    52  mdr32fxqi_dma.o(.text.DMA_Cmd)
    DMA_CtrlDataInit                         0x00000645   Thumb Code   158  mdr32fxqi_dma.o(.text.DMA_CtrlDataInit)
    DMA_DeInit                               0x000006e5   Thumb Code    60  mdr32fxqi_dma.o(.text.DMA_DeInit)
    DMA_GetFlagStatus                        0x00000729   Thumb Code   232  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    DMA_IRQHandler                           0x00000825   Thumb Code   268  dma.o(.text.DMA_IRQHandler)
    DMA_Init                                 0x00000949   Thumb Code   236  mdr32fxqi_dma.o(.text.DMA_Init)
    DMA_StructInit                           0x00000a5d   Thumb Code    34  mdr32fxqi_dma.o(.text.DMA_StructInit)
    DMA_UART_RX_init                         0x00000a81   Thumb Code   172  uart.o(.text.DMA_UART_RX_init)
    DMA_common_init                          0x00000b35   Thumb Code    40  dma.o(.text.DMA_common_init)
    EBC_Init                                 0x00000b75   Thumb Code    88  mdr32fxqi_ebc.o(.text.EBC_Init)
    EBC_MemRegionInit                        0x00000bd5   Thumb Code    60  mdr32fxqi_ebc.o(.text.EBC_MemRegionInit)
    EBC_MemRegionStructInit                  0x00000c15   Thumb Code    30  mdr32fxqi_ebc.o(.text.EBC_MemRegionStructInit)
    EBC_StructInit                           0x00000c33   Thumb Code    58  mdr32fxqi_ebc.o(.text.EBC_StructInit)
    PORT_Init                                0x00000c6d   Thumb Code   328  mdr32fxqi_port.o(.text.PORT_Init)
    PORT_ResetBits                           0x00000db9   Thumb Code    16  mdr32fxqi_port.o(.text.PORT_ResetBits)
    PORT_SetBits                             0x00000dc9   Thumb Code    16  mdr32fxqi_port.o(.text.PORT_SetBits)
    PORT_StructInit                          0x00000dd9   Thumb Code    52  mdr32fxqi_port.o(.text.PORT_StructInit)
    PORT_WriteBit                            0x00000e11   Thumb Code    38  mdr32fxqi_port.o(.text.PORT_WriteBit)
    RST_CLK_CPU_PLLcmd                       0x00000e39   Thumb Code    52  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd)
    RST_CLK_CPU_PLLconfig                    0x00000e6d   Thumb Code   112  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    RST_CLK_CPU_PLLstatus                    0x00000ee1   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus)
    RST_CLK_CPU_PLLuse                       0x00000f45   Thumb Code    56  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse)
    RST_CLK_CPUclkPrescaler                  0x00000f7d   Thumb Code    40  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler)
    RST_CLK_CPUclkSelection                  0x00000fa5   Thumb Code    40  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection)
    RST_CLK_DeInit                           0x00000fcd   Thumb Code    36  mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit)
    RST_CLK_GetClocksFreq                    0x00000ff1   Thumb Code   596  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    RST_CLK_GetFlagStatus                    0x00001259   Thumb Code    80  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    RST_CLK_HSEconfig                        0x000012ad   Thumb Code    68  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig)
    RST_CLK_HSEstatus                        0x000012f1   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus)
    RST_CLK_HSIcmd                           0x00001355   Thumb Code    60  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd)
    RST_CLK_HSIstatus                        0x00001395   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus)
    RST_CLK_PCLKcmd                          0x000013f9   Thumb Code    44  mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd)
    RST_CLK_WarmDeInit                       0x00001425   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit)
    SSP_BRGInit                              0x000014a1   Thumb Code   156  mdr32fxqi_ssp.o(.text.SSP_BRGInit)
    SSP_Cmd                                  0x00001549   Thumb Code    44  mdr32fxqi_ssp.o(.text.SSP_Cmd)
    SSP_DMACmd                               0x00001579   Thumb Code    48  mdr32fxqi_ssp.o(.text.SSP_DMACmd)
    SSP_GetFlagStatus                        0x000015a9   Thumb Code    50  mdr32fxqi_ssp.o(.text.SSP_GetFlagStatus)
    SSP_ITConfig                             0x000015db   Thumb Code    46  mdr32fxqi_ssp.o(.text.SSP_ITConfig)
    SSP_Init                                 0x00001609   Thumb Code    64  mdr32fxqi_ssp.o(.text.SSP_Init)
    SSP_SendData                             0x00001649   Thumb Code    18  mdr32fxqi_ssp.o(.text.SSP_SendData)
    SSP_StructInit                           0x0000165b   Thumb Code    46  mdr32fxqi_ssp.o(.text.SSP_StructInit)
    SystemCoreClockUpdate                    0x00001689   Thumb Code   176  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00001749   Thumb Code    60  system_mdr32f1qi.o(.text.SystemInit)
    TIMER2_IRQHandler                        0x000017b5   Thumb Code   280  timer.o(.text.TIMER2_IRQHandler)
    TIMER_BRGInit                            0x000018e1   Thumb Code   244  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    TIMER_ChnCCR1_Cmd                        0x000019ed   Thumb Code    80  mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd)
    TIMER_ChnInit                            0x00001a3d   Thumb Code   122  mdr32fxqi_timer.o(.text.TIMER_ChnInit)
    TIMER_ChnStructInit                      0x00001ab7   Thumb Code    58  mdr32fxqi_timer.o(.text.TIMER_ChnStructInit)
    TIMER_ClearFlag                          0x00001af1   Thumb Code    18  mdr32fxqi_timer.o(.text.TIMER_ClearFlag)
    TIMER_Cmd                                0x00001b03   Thumb Code    52  mdr32fxqi_timer.o(.text.TIMER_Cmd)
    TIMER_CntInit                            0x00001b37   Thumb Code    88  mdr32fxqi_timer.o(.text.TIMER_CntInit)
    TIMER_CntStructInit                      0x00001b8f   Thumb Code    58  mdr32fxqi_timer.o(.text.TIMER_CntStructInit)
    TIMER_GetCounter                         0x00001bc9   Thumb Code    12  mdr32fxqi_timer.o(.text.TIMER_GetCounter)
    TIMER_GetITStatus                        0x00001bd5   Thumb Code    58  mdr32fxqi_timer.o(.text.TIMER_GetITStatus)
    TIMER_ITConfig                           0x00001c0f   Thumb Code    54  mdr32fxqi_timer.o(.text.TIMER_ITConfig)
    TIMER_SetCounter                         0x00001c45   Thumb Code    16  mdr32fxqi_timer.o(.text.TIMER_SetCounter)
    UART1_IRQHandler                         0x00001c55   Thumb Code    64  uart.o(.text.UART1_IRQHandler)
    UART2_IRQHandler                         0x00001c99   Thumb Code    64  uart.o(.text.UART2_IRQHandler)
    UART_BRGInit                             0x00001ce1   Thumb Code   112  mdr32fxqi_uart.o(.text.UART_BRGInit)
    UART_ClearITPendingBit                   0x00001d55   Thumb Code    20  mdr32fxqi_uart.o(.text.UART_ClearITPendingBit)
    UART_Cmd                                 0x00001d69   Thumb Code    44  mdr32fxqi_uart.o(.text.UART_Cmd)
    UART_DMACmd                              0x00001d99   Thumb Code    48  mdr32fxqi_uart.o(.text.UART_DMACmd)
    UART_GetFlagStatus                       0x00001dc9   Thumb Code    50  mdr32fxqi_uart.o(.text.UART_GetFlagStatus)
    UART_ITConfig                            0x00001dfb   Thumb Code    46  mdr32fxqi_uart.o(.text.UART_ITConfig)
    UART_Init                                0x00001e29   Thumb Code   260  mdr32fxqi_uart.o(.text.UART_Init)
    UART_ReceiveData                         0x00001f3d   Thumb Code    14  mdr32fxqi_uart.o(.text.UART_ReceiveData)
    adc_gpio_config                          0x00002001   Thumb Code   176  1273pv19t.o(.text.adc_gpio_config)
    adc_init                                 0x000020b9   Thumb Code   144  1273pv19t.o(.text.adc_init)
    adc_reset                                0x0000215d   Thumb Code    36  1273pv19t.o(.text.adc_reset)
    delay_micro                              0x00002185   Thumb Code    44  timer.o(.text.delay_micro)
    delay_milli                              0x000021b5   Thumb Code    40  timer.o(.text.delay_milli)
    dma_spi_rx_init                          0x000021e1   Thumb Code   164  spi.o(.text.dma_spi_rx_init)
    do_mpa_task                              0x0000228d   Thumb Code   424  main.o(.text.do_mpa_task)
    ebc_gpio_config                          0x0000243d   Thumb Code   248  ebc.o(.text.ebc_gpio_config)
    ebc_init                                 0x00002555   Thumb Code    68  ebc.o(.text.ebc_init)
    fill_crc32_table                         0x00002599   Thumb Code   124  rs422_protocol.o(.text.fill_crc32_table)
    find_max_halfword                        0x00002621   Thumb Code    76  external_ram.o(.text.find_max_halfword)
    init_external_ram_space                  0x0000266d   Thumb Code  1128  external_ram.o(.text.init_external_ram_space)
    main                                     0x00002b09   Thumb Code   448  main.o(.text.main)
    spi_clean_fifo_rx_buf                    0x00002d1d   Thumb Code    40  spi.o(.text.spi_clean_fifo_rx_buf)
    spi_gpio_config                          0x00002d45   Thumb Code   124  spi.o(.text.spi_gpio_config)
    spi_init                                 0x00002dc5   Thumb Code   132  spi.o(.text.spi_init)
    timer1_init                              0x00002e49   Thumb Code    74  timer.o(.text.timer1_init)
    timer2_init                              0x00002e93   Thumb Code   200  timer.o(.text.timer2_init)
    timer3_init                              0x00002f5b   Thumb Code    74  timer.o(.text.timer3_init)
    timer_init                               0x00002fa5   Thumb Code    76  timer.o(.text.timer_init)
    uart_gpio_config                         0x00002ffd   Thumb Code   208  uart.o(.text.uart_gpio_config)
    uart_init                                0x000030d9   Thumb Code   174  uart.o(.text.uart_init)
    uart_set_read_timeout                    0x00003187   Thumb Code    22  uart.o(.text.uart_set_read_timeout)
    __aeabi_fadd                             0x0000319d   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x0000319d   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_fmul                             0x00003229   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x00003229   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_fsub                             0x000032d9   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x000032d9   Thumb Code   204  faddsub.o(x$fpl$fsub)
    __I$use$fp                               0x000033a8   Number         0  usenofp.o(x$fpl$usenofp)
    Region$$Table$$Base                      0x000033ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000033dc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_mdr32f1qi.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    UART1                                    0x20000068   Data         120  uart.o(.bss.UART1)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    UART2                                    0x200000e0   Data         120  uart.o(.bss.UART2)
    adc_1                                    0x20000158   Data          16  1273pv19t.o(.bss.adc_1)
    ram_space_pointer                        0x20000168   Data           4  main.o(.bss.ram_space_pointer)
    timer_1                                  0x2000016c   Data          76  timer.o(.bss.timer_1)
    timer_2                                  0x200001b8   Data          76  timer.o(.bss.timer_2)
    timer_3                                  0x20000204   Data          76  timer.o(.bss.timer_3)
    spi_1                                    0x20100000   Data          84  spi.o(EXECUTABLE_MEMORY_SECTION)
    spi_2                                    0x20100054   Data          84  spi.o(EXECUTABLE_MEMORY_SECTION)
    DMA_ControlTable                         0x20100400   Data        1024  mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003c00, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00003414])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000033dc, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          184    RESET               startup_mdr32f1qi.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          655  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO          845    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001a   Code   RO          847    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0000011e   0x0000011e   0x00000002   PAD
    0x00000120   0x00000120   0x0000001c   Code   RO          849    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0000013c   0x0000013c   0x00000002   Code   RO          704    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          718    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          720    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          722    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          725    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          727    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          729    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          732    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          734    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          736    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          738    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          740    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          742    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          744    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          746    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          748    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          750    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          752    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          756    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          758    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          760    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          762    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000002   Code   RO          763    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x00000140   0x00000140   0x00000002   Code   RO          798    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000142   0x00000142   0x00000000   Code   RO          826    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          828    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          831    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          834    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          836    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          839    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000002   Code   RO          840    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000144   0x00000144   0x00000000   Code   RO          667    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000144   0x00000144   0x00000000   Code   RO          674    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000144   0x00000144   0x00000006   Code   RO          686    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000014a   0x0000014a   0x00000000   Code   RO          676    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0000014a   0x0000014a   0x00000004   Code   RO          677    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000014e   0x0000014e   0x00000000   Code   RO          679    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000014e   0x0000014e   0x00000008   Code   RO          680    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000156   0x00000156   0x00000002   Code   RO          709    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000158   0x00000158   0x00000000   Code   RO          769    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000158   0x00000158   0x00000004   Code   RO          770    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0000015c   0x0000015c   0x00000006   Code   RO          771    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000162   0x00000162   0x00000002   PAD
    0x00000164   0x00000164   0x00000038   Code   RO          641    .emb_text           c_p.l(rt_memcpy.o)
    0x0000019c   0x0000019c   0x00000074   Code   RO          185    .text               startup_mdr32f1qi.o
    0x00000210   0x00000210   0x00000008   Code   RO          639    .text               c_p.l(abs.o)
    0x00000218   0x00000218   0x00000082   Code   RO          642    .text               c_p.l(rt_memcpy.o)
    0x0000029a   0x0000029a   0x00000040   Code   RO          645    .text               c_p.l(rt_memclr.o)
    0x000002da   0x000002da   0x00000002   PAD
    0x000002dc   0x000002dc   0x0000006c   Code   RO          647    .text               c_p.l(strncpy.o)
    0x00000348   0x00000348   0x0000016c   Code   RO          649    .text               c_p.l(aeabi_sdiv.o)
    0x000004b4   0x000004b4   0x00000006   Code   RO          653    .text               c_p.l(heapauxi.o)
    0x000004ba   0x000004ba   0x0000005e   Code   RO          663    .text               fz_ps.l(fflti.o)
    0x00000518   0x00000518   0x0000003e   Code   RO          690    .text               c_p.l(sys_stackheap_outer.o)
    0x00000556   0x00000556   0x00000010   Code   RO          693    .text               c_p.l(exit.o)
    0x00000566   0x00000566   0x00000002   PAD
    0x00000568   0x00000568   0x00000008   Code   RO          705    .text               c_p.l(libspace.o)
    0x00000570   0x00000570   0x0000000c   Code   RO          764    .text               c_p.l(sys_exit.o)
    0x0000057c   0x0000057c   0x00000002   Code   RO          787    .text               c_p.l(use_no_semi.o)
    0x0000057e   0x0000057e   0x00000000   Code   RO          789    .text               c_p.l(indicate_semi.o)
    0x0000057e   0x0000057e   0x0000003a   Code   RO          843    .text               c_p.l(__dczerorl.o)
    0x000005b8   0x000005b8   0x00000056   Code   RO            2    .text.CLOCK_Init    clock.o
    0x0000060e   0x0000060e   0x00000002   PAD
    0x00000610   0x00000610   0x00000034   Code   RO          275    .text.DMA_Cmd       mdr32fxqi_dma.o
    0x00000644   0x00000644   0x0000009e   Code   RO          261    .text.DMA_CtrlDataInit  mdr32fxqi_dma.o
    0x000006e2   0x000006e2   0x00000002   PAD
    0x000006e4   0x000006e4   0x00000044   Code   RO          257    .text.DMA_DeInit    mdr32fxqi_dma.o
    0x00000728   0x00000728   0x000000fc   Code   RO          283    .text.DMA_GetFlagStatus  mdr32fxqi_dma.o
    0x00000824   0x00000824   0x00000124   Code   RO           12    .text.DMA_IRQHandler  dma.o
    0x00000948   0x00000948   0x00000114   Code   RO          269    .text.DMA_Init      mdr32fxqi_dma.o
    0x00000a5c   0x00000a5c   0x00000022   Code   RO          271    .text.DMA_StructInit  mdr32fxqi_dma.o
    0x00000a7e   0x00000a7e   0x00000002   PAD
    0x00000a80   0x00000a80   0x000000b4   Code   RO          107    .text.DMA_UART_RX_init  uart.o
    0x00000b34   0x00000b34   0x00000040   Code   RO           10    .text.DMA_common_init  dma.o
    0x00000b74   0x00000b74   0x00000060   Code   RO          295    .text.EBC_Init      mdr32fxqi_ebc.o
    0x00000bd4   0x00000bd4   0x00000040   Code   RO          307    .text.EBC_MemRegionInit  mdr32fxqi_ebc.o
    0x00000c14   0x00000c14   0x0000001e   Code   RO          305    .text.EBC_MemRegionStructInit  mdr32fxqi_ebc.o
    0x00000c32   0x00000c32   0x0000003a   Code   RO          297    .text.EBC_StructInit  mdr32fxqi_ebc.o
    0x00000c6c   0x00000c6c   0x0000014c   Code   RO          337    .text.PORT_Init     mdr32fxqi_port.o
    0x00000db8   0x00000db8   0x00000010   Code   RO          347    .text.PORT_ResetBits  mdr32fxqi_port.o
    0x00000dc8   0x00000dc8   0x00000010   Code   RO          345    .text.PORT_SetBits  mdr32fxqi_port.o
    0x00000dd8   0x00000dd8   0x00000038   Code   RO          339    .text.PORT_StructInit  mdr32fxqi_port.o
    0x00000e10   0x00000e10   0x00000026   Code   RO          349    .text.PORT_WriteBit  mdr32fxqi_port.o
    0x00000e36   0x00000e36   0x00000002   PAD
    0x00000e38   0x00000e38   0x00000034   Code   RO          398    .text.RST_CLK_CPU_PLLcmd  mdr32fxqi_rst_clk.o
    0x00000e6c   0x00000e6c   0x00000074   Code   RO          394    .text.RST_CLK_CPU_PLLconfig  mdr32fxqi_rst_clk.o
    0x00000ee0   0x00000ee0   0x00000064   Code   RO          400    .text.RST_CLK_CPU_PLLstatus  mdr32fxqi_rst_clk.o
    0x00000f44   0x00000f44   0x00000038   Code   RO          396    .text.RST_CLK_CPU_PLLuse  mdr32fxqi_rst_clk.o
    0x00000f7c   0x00000f7c   0x00000028   Code   RO          402    .text.RST_CLK_CPUclkPrescaler  mdr32fxqi_rst_clk.o
    0x00000fa4   0x00000fa4   0x00000028   Code   RO          370    .text.RST_CLK_CPUclkSelection  mdr32fxqi_rst_clk.o
    0x00000fcc   0x00000fcc   0x00000024   Code   RO          360    .text.RST_CLK_DeInit  mdr32fxqi_rst_clk.o
    0x00000ff0   0x00000ff0   0x00000268   Code   RO          432    .text.RST_CLK_GetClocksFreq  mdr32fxqi_rst_clk.o
    0x00001258   0x00001258   0x00000054   Code   RO          376    .text.RST_CLK_GetFlagStatus  mdr32fxqi_rst_clk.o
    0x000012ac   0x000012ac   0x00000044   Code   RO          372    .text.RST_CLK_HSEconfig  mdr32fxqi_rst_clk.o
    0x000012f0   0x000012f0   0x00000064   Code   RO          374    .text.RST_CLK_HSEstatus  mdr32fxqi_rst_clk.o
    0x00001354   0x00001354   0x00000040   Code   RO          366    .text.RST_CLK_HSIcmd  mdr32fxqi_rst_clk.o
    0x00001394   0x00001394   0x00000064   Code   RO          368    .text.RST_CLK_HSIstatus  mdr32fxqi_rst_clk.o
    0x000013f8   0x000013f8   0x0000002c   Code   RO          364    .text.RST_CLK_PCLKcmd  mdr32fxqi_rst_clk.o
    0x00001424   0x00001424   0x0000007c   Code   RO          362    .text.RST_CLK_WarmDeInit  mdr32fxqi_rst_clk.o
    0x000014a0   0x000014a0   0x000000a8   Code   RO          465    .text.SSP_BRGInit   mdr32fxqi_ssp.o
    0x00001548   0x00001548   0x00000030   Code   RO          447    .text.SSP_Cmd       mdr32fxqi_ssp.o
    0x00001578   0x00001578   0x00000030   Code   RO          457    .text.SSP_DMACmd    mdr32fxqi_ssp.o
    0x000015a8   0x000015a8   0x00000032   Code   RO          463    .text.SSP_GetFlagStatus  mdr32fxqi_ssp.o
    0x000015da   0x000015da   0x0000002e   Code   RO          449    .text.SSP_ITConfig  mdr32fxqi_ssp.o
    0x00001608   0x00001608   0x00000040   Code   RO          443    .text.SSP_Init      mdr32fxqi_ssp.o
    0x00001648   0x00001648   0x00000012   Code   RO          459    .text.SSP_SendData  mdr32fxqi_ssp.o
    0x0000165a   0x0000165a   0x0000002e   Code   RO          445    .text.SSP_StructInit  mdr32fxqi_ssp.o
    0x00001688   0x00001688   0x000000c0   Code   RO          192    .text.SystemCoreClockUpdate  system_mdr32f1qi.o
    0x00001748   0x00001748   0x0000006c   Code   RO          194    .text.SystemInit    system_mdr32f1qi.o
    0x000017b4   0x000017b4   0x0000012c   Code   RO           69    .text.TIMER2_IRQHandler  timer.o
    0x000018e0   0x000018e0   0x0000010c   Code   RO          588    .text.TIMER_BRGInit  mdr32fxqi_timer.o
    0x000019ec   0x000019ec   0x00000050   Code   RO          552    .text.TIMER_ChnCCR1_Cmd  mdr32fxqi_timer.o
    0x00001a3c   0x00001a3c   0x0000007a   Code   RO          518    .text.TIMER_ChnInit  mdr32fxqi_timer.o
    0x00001ab6   0x00001ab6   0x0000003a   Code   RO          520    .text.TIMER_ChnStructInit  mdr32fxqi_timer.o
    0x00001af0   0x00001af0   0x00000012   Code   RO          580    .text.TIMER_ClearFlag  mdr32fxqi_timer.o
    0x00001b02   0x00001b02   0x00000034   Code   RO          480    .text.TIMER_Cmd     mdr32fxqi_timer.o
    0x00001b36   0x00001b36   0x00000058   Code   RO          476    .text.TIMER_CntInit  mdr32fxqi_timer.o
    0x00001b8e   0x00001b8e   0x0000003a   Code   RO          478    .text.TIMER_CntStructInit  mdr32fxqi_timer.o
    0x00001bc8   0x00001bc8   0x0000000c   Code   RO          484    .text.TIMER_GetCounter  mdr32fxqi_timer.o
    0x00001bd4   0x00001bd4   0x0000003a   Code   RO          586    .text.TIMER_GetITStatus  mdr32fxqi_timer.o
    0x00001c0e   0x00001c0e   0x00000036   Code   RO          584    .text.TIMER_ITConfig  mdr32fxqi_timer.o
    0x00001c44   0x00001c44   0x00000010   Code   RO          482    .text.TIMER_SetCounter  mdr32fxqi_timer.o
    0x00001c54   0x00001c54   0x00000044   Code   RO           85    .text.UART1_IRQHandler  uart.o
    0x00001c98   0x00001c98   0x00000048   Code   RO           87    .text.UART2_IRQHandler  uart.o
    0x00001ce0   0x00001ce0   0x00000074   Code   RO          629    .text.UART_BRGInit  mdr32fxqi_uart.o
    0x00001d54   0x00001d54   0x00000014   Code   RO          611    .text.UART_ClearITPendingBit  mdr32fxqi_uart.o
    0x00001d68   0x00001d68   0x00000030   Code   RO          603    .text.UART_Cmd      mdr32fxqi_uart.o
    0x00001d98   0x00001d98   0x00000030   Code   RO          615    .text.UART_DMACmd   mdr32fxqi_uart.o
    0x00001dc8   0x00001dc8   0x00000032   Code   RO          627    .text.UART_GetFlagStatus  mdr32fxqi_uart.o
    0x00001dfa   0x00001dfa   0x0000002e   Code   RO          605    .text.UART_ITConfig  mdr32fxqi_uart.o
    0x00001e28   0x00001e28   0x00000114   Code   RO          599    .text.UART_Init     mdr32fxqi_uart.o
    0x00001f3c   0x00001f3c   0x0000000e   Code   RO          619    .text.UART_ReceiveData  mdr32fxqi_uart.o
    0x00001f4a   0x00001f4a   0x00000002   PAD
    0x00001f4c   0x00001f4c   0x0000002c   Code   RO          259    .text.__NVIC_ClearPendingIRQ  mdr32fxqi_dma.o
    0x00001f78   0x00001f78   0x00000034   Code   RO          163    .text.__NVIC_DisableIRQ  spi.o
    0x00001fac   0x00001fac   0x00000028   Code   RO           65    .text.__NVIC_EnableIRQ  timer.o
    0x00001fd4   0x00001fd4   0x0000002c   Code   RO           93    .text.__NVIC_EnableIRQ  uart.o
    0x00002000   0x00002000   0x000000b8   Code   RO          145    .text.adc_gpio_config  1273pv19t.o
    0x000020b8   0x000020b8   0x000000a4   Code   RO          147    .text.adc_init      1273pv19t.o
    0x0000215c   0x0000215c   0x00000028   Code   RO          149    .text.adc_reset     1273pv19t.o
    0x00002184   0x00002184   0x00000030   Code   RO           73    .text.delay_micro   timer.o
    0x000021b4   0x000021b4   0x0000002c   Code   RO           71    .text.delay_milli   timer.o
    0x000021e0   0x000021e0   0x000000ac   Code   RO          173    .text.dma_spi_rx_init  spi.o
    0x0000228c   0x0000228c   0x000001b0   Code   RO           23    .text.do_mpa_task   main.o
    0x0000243c   0x0000243c   0x00000118   Code   RO          122    .text.ebc_gpio_config  ebc.o
    0x00002554   0x00002554   0x00000044   Code   RO          124    .text.ebc_init      ebc.o
    0x00002598   0x00002598   0x00000088   Code   RO           46    .text.fill_crc32_table  rs422_protocol.o
    0x00002620   0x00002620   0x0000004c   Code   RO          135    .text.find_max_halfword  external_ram.o
    0x0000266c   0x0000266c   0x0000049c   Code   RO          133    .text.init_external_ram_space  external_ram.o
    0x00002b08   0x00002b08   0x00000214   Code   RO           21    .text.main          main.o
    0x00002d1c   0x00002d1c   0x00000028   Code   RO          171    .text.spi_clean_fifo_rx_buf  spi.o
    0x00002d44   0x00002d44   0x00000080   Code   RO          159    .text.spi_gpio_config  spi.o
    0x00002dc4   0x00002dc4   0x00000084   Code   RO          161    .text.spi_init      spi.o
    0x00002e48   0x00002e48   0x0000004a   Code   RO           59    .text.timer1_init   timer.o
    0x00002e92   0x00002e92   0x000000c8   Code   RO           63    .text.timer2_init   timer.o
    0x00002f5a   0x00002f5a   0x0000004a   Code   RO           61    .text.timer3_init   timer.o
    0x00002fa4   0x00002fa4   0x00000058   Code   RO           67    .text.timer_init    timer.o
    0x00002ffc   0x00002ffc   0x000000dc   Code   RO           89    .text.uart_gpio_config  uart.o
    0x000030d8   0x000030d8   0x000000ae   Code   RO           91    .text.uart_init     uart.o
    0x00003186   0x00003186   0x00000016   Code   RO          109    .text.uart_set_read_timeout  uart.o
    0x0000319c   0x0000319c   0x0000008c   Code   RO          657    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x00003228   0x00003228   0x000000b0   Code   RO          665    x$fpl$fmul          fz_ps.l(fmul.o)
    0x000032d8   0x000032d8   0x000000d0   Code   RO          659    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x000033a8   0x000033a8   0x00000000   Code   RO          672    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x000033a8   0x000033a8   0x00000004   Data   RO          137    .rodata.str1.1      external_ram.o
    0x000033ac   0x000033ac   0x00000030   Data   RO          842    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x000033e0, Size: 0x00002250, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000033e0   0x00000004   Data   RW          196    .data.SystemCoreClock  system_mdr32f1qi.o
    0x20000004   0x000033e4   0x00000004   PAD
    0x20000008        -       0x00000060   Zero   RW          706    .bss                c_p.l(libspace.o)
    0x20000068        -       0x00000078   Zero   RW          113    .bss.UART1          uart.o
    0x200000e0        -       0x00000078   Zero   RW          114    .bss.UART2          uart.o
    0x20000158        -       0x00000010   Zero   RW          151    .bss.adc_1          1273pv19t.o
    0x20000168        -       0x00000004   Zero   RW           27    .bss.ram_space_pointer  main.o
    0x2000016c        -       0x0000004c   Zero   RW           76    .bss.timer_1        timer.o
    0x200001b8        -       0x0000004c   Zero   RW           75    .bss.timer_2        timer.o
    0x20000204        -       0x0000004c   Zero   RW           77    .bss.timer_3        timer.o
    0x20000250        -       0x00001000   Zero   RW          183    HEAP                startup_mdr32f1qi.o
    0x20001250        -       0x00001000   Zero   RW          182    STACK               startup_mdr32f1qi.o


    Execution Region RW_IRAM2 (Exec base: 0x20100000, Load base: 0x00003400, Size: 0x00000800, Max: 0x00004000, ABSOLUTE, COMPRESSED[0x00000014])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20100000   COMPRESSED   0x000000a8   Data   RW          175    EXECUTABLE_MEMORY_SECTION  spi.o
    0x201000a8   COMPRESSED   0x00000358   PAD
    0x20100400   COMPRESSED   0x00000400   Data   RW          285    EXECUTABLE_MEMORY_SECTION  mdr32fxqi_dma.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       388         32          0          0         16      10583   1273pv19t.o
        86          0          0          0          0       1323   clock.o
       356         48          0          0          0       4461   dma.o
       348         32          0          0          0       5583   ebc.o
      1256         64          4          0          0       7062   external_ram.o
       964         92          0          0          4      19011   main.o
       884        104          0       1024          0       8613   mdr32fxqi_dma.o
       248         12          0          0          0       5994   mdr32fxqi_ebc.o
       458          8          0          0          0       4906   mdr32fxqi_port.o
      1640         56          0          0          0      12829   mdr32fxqi_rst_clk.o
       488         16          0          0          0       5616   mdr32fxqi_ssp.o
       884         24          0          0          0      21062   mdr32fxqi_timer.o
       618         24          0          0          0       7536   mdr32fxqi_uart.o
       136         12          0          0          0      13047   rs422_protocol.o
       524         16          0        168          0      10345   spi.o
       116         28        192          0       8192       1944   startup_mdr32f1qi.o
       300         64          0          4          0       1557   system_mdr32f1qi.o
       868         40          0          0        228       6762   timer.o
       780         36          0          0        240      14636   uart.o

    ----------------------------------------------------------------------
     11352        708        244       2052       8684     162870   Object Totals
         0          0         48          0          0          0   (incl. Generated)
        10          0          0        856          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
         8          0          0          0          0         60   abs.o
       364          4          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       108          4          0          0          0         76   strncpy.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       348          8          0          0          0        160   faddsub.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      1680         36          0          0         96       1360   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1054         24          0          0         96       1028   c_p.l
       618         12          0          0          0        332   fz_ps.l

    ----------------------------------------------------------------------
      1680         36          0          0         96       1360   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13032        744        244       2052       8780     163390   Grand Totals
     13032        744        244         24       8780     163390   ELF Image Totals (compressed)
     13032        744        244         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13276 (  12.96kB)
    Total RW  Size (RW Data + ZI Data)             10832 (  10.58kB)
    Total ROM Size (Code + RO Data + RW Data)      13300 (  12.99kB)

==============================================================================

