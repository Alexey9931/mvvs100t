Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    adc.o(.ARM.exidx.text.Delay) refers to adc.o(.text.Delay) for [Anonymous Symbol]
    adc.o(.text.ADCInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    adc.o(.text.ADCInit) refers to mdr32fxqi_adc.o(.text.ADC_StructInit) for ADC_StructInit
    adc.o(.text.ADCInit) refers to mdr32fxqi_adc.o(.text.ADC_Init) for ADC_Init
    adc.o(.text.ADCInit) refers to adc.o(.bss.ADC) for ADC
    adc.o(.ARM.exidx.text.ADCInit) refers to adc.o(.text.ADCInit) for [Anonymous Symbol]
    adc.o(.text.ADC_Channel_Init) refers to mdr32fxqi_adc.o(.text.ADCx_StructInit) for ADCx_StructInit
    adc.o(.text.ADC_Channel_Init) refers to mdr32fxqi_adc.o(.text.ADC1_Init) for ADC1_Init
    adc.o(.text.ADC_Channel_Init) refers to mdr32fxqi_adc.o(.text.ADC1_Cmd) for ADC1_Cmd
    adc.o(.text.ADC_Channel_Init) refers to adc.o(.bss.ADC3) for ADC3
    adc.o(.ARM.exidx.text.ADC_Channel_Init) refers to adc.o(.text.ADC_Channel_Init) for [Anonymous Symbol]
    adc.o(.text.ADC_start_mesuare) refers to mdr32fxqi_adc.o(.text.ADC1_SetChannel) for ADC1_SetChannel
    adc.o(.text.ADC_start_mesuare) refers to mdr32fxqi_adc.o(.text.ADC1_Start) for ADC1_Start
    adc.o(.text.ADC_start_mesuare) refers to mdr32fxqi_adc.o(.text.ADC1_GetStatus) for ADC1_GetStatus
    adc.o(.text.ADC_start_mesuare) refers to mdr32fxqi_adc.o(.text.ADC1_GetResult) for ADC1_GetResult
    adc.o(.text.ADC_start_mesuare) refers to fflti.o(.text) for __aeabi_ui2f
    adc.o(.text.ADC_start_mesuare) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    adc.o(.text.ADC_start_mesuare) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    adc.o(.text.ADC_start_mesuare) refers to register_space.o(.text.write_register) for write_register
    adc.o(.text.ADC_start_mesuare) refers to adc.o(.text.averaging) for averaging
    adc.o(.text.ADC_start_mesuare) refers to ffixi.o(.text) for __aeabi_f2iz
    adc.o(.ARM.exidx.text.ADC_start_mesuare) refers to adc.o(.text.ADC_start_mesuare) for [Anonymous Symbol]
    adc.o(.text.averaging) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    adc.o(.text.averaging) refers to fdiv.o(.text) for __aeabi_fdiv
    adc.o(.ARM.exidx.text.averaging) refers to adc.o(.text.averaging) for [Anonymous Symbol]
    adc.o(.text.averaging_result) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    adc.o(.ARM.exidx.text.averaging_result) refers to adc.o(.text.averaging_result) for [Anonymous Symbol]
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig) for RST_CLK_HSEconfig
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) for RST_CLK_HSEstatus
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig) for RST_CLK_CPU_PLLconfig
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd) for RST_CLK_CPU_PLLcmd
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) for RST_CLK_CPU_PLLstatus
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler) for RST_CLK_CPUclkPrescaler
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse) for RST_CLK_CPU_PLLuse
    clock.o(.text.CLOCK_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    clock.o(.ARM.exidx.text.CLOCK_Init) refers to clock.o(.text.CLOCK_Init) for [Anonymous Symbol]
    dma.o(.text.DMA_common_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    dma.o(.text.DMA_common_init) refers to mdr32fxqi_dma.o(.text.DMA_DeInit) for DMA_DeInit
    dma.o(.ARM.exidx.text.DMA_common_init) refers to dma.o(.text.DMA_common_init) for [Anonymous Symbol]
    dma.o(.text.DMA_IRQHandler) refers to mdr32fxqi_dma.o(.text.DMA_GetFlagStatus) for DMA_GetFlagStatus
    dma.o(.text.DMA_IRQHandler) refers to uart.o(.text.DMA_UART_RX_init) for DMA_UART_RX_init
    dma.o(.text.DMA_IRQHandler) refers to uart.o(EXECUTABLE_MEMORY_SECTION) for UART1
    dma.o(.ARM.exidx.text.DMA_IRQHandler) refers to dma.o(.text.DMA_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to uart.o(.text.uart_set_read_timeout) for uart_set_read_timeout
    main.o(.text.main) refers to uart.o(.text.uart_set_write_timeout) for uart_set_write_timeout
    main.o(.text.main) refers to clock.o(.text.CLOCK_Init) for CLOCK_Init
    main.o(.text.main) refers to ports.o(.text.PortsInit) for PortsInit
    main.o(.text.main) refers to timer.o(.text.TIMER1_init) for TIMER1_init
    main.o(.text.main) refers to timer.o(.text.TIMER2_init) for TIMER2_init
    main.o(.text.main) refers to dma.o(.text.DMA_common_init) for DMA_common_init
    main.o(.text.main) refers to uart.o(.text.uart_init) for uart_init
    main.o(.text.main) refers to uart.o(.text.DMA_UART_RX_init) for DMA_UART_RX_init
    main.o(.text.main) refers to uart.o(.text.uart_read) for uart_read
    main.o(.text.main) refers to uart.o(.text.uart_write) for uart_write
    main.o(.text.main) refers to uart.o(EXECUTABLE_MEMORY_SECTION) for UART1
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.request_data) refers to protocol.o(.text.Protocol_read) for Protocol_read
    main.o(.text.request_data) refers to protocol.o(.text.Protocol_do_cmd) for Protocol_do_cmd
    main.o(.text.request_data) refers to protocol.o(.text.Protocol_write) for Protocol_write
    main.o(.ARM.exidx.text.request_data) refers to main.o(.text.request_data) for [Anonymous Symbol]
    ports.o(.text.PortsInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    ports.o(.text.PortsInit) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for PORT_StructInit
    ports.o(.text.PortsInit) refers to mdr32fxqi_port.o(.text.PORT_Init) for PORT_Init
    ports.o(.ARM.exidx.text.PortsInit) refers to ports.o(.text.PortsInit) for [Anonymous Symbol]
    protocol.o(.text.Protocol_write) refers to rt_memclr.o(.text) for __aeabi_memclr
    protocol.o(.text.Protocol_write) refers to protocol.o(.text.Protocol_find_crc) for Protocol_find_crc
    protocol.o(.text.Protocol_write) refers to uart.o(.text.uart_write) for uart_write
    protocol.o(.ARM.exidx.text.Protocol_write) refers to protocol.o(.text.Protocol_write) for [Anonymous Symbol]
    protocol.o(.text.Protocol_find_crc) refers to protocol.o(.text.Crc32) for Crc32
    protocol.o(.ARM.exidx.text.Protocol_find_crc) refers to protocol.o(.text.Protocol_find_crc) for [Anonymous Symbol]
    protocol.o(.text.Protocol_read) refers to uart.o(.text.uart_read) for uart_read
    protocol.o(.ARM.exidx.text.Protocol_read) refers to protocol.o(.text.Protocol_read) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.Protocol_do_cmd) refers to protocol.o(.text.Protocol_do_cmd) for [Anonymous Symbol]
    protocol.o(.ARM.exidx.text.Crc32) refers to protocol.o(.text.Crc32) for [Anonymous Symbol]
    register_space.o(.text.registers_ini) refers to register_space.o(.text.write_register) for write_register
    register_space.o(.ARM.exidx.text.registers_ini) refers to register_space.o(.text.registers_ini) for [Anonymous Symbol]
    register_space.o(.text.write_register) refers to register_space.o(.bss.MPA_Registers) for [Anonymous Symbol]
    register_space.o(.text.write_register) refers to register_space.o(.bss.Common_Registers) for [Anonymous Symbol]
    register_space.o(.ARM.exidx.text.write_register) refers to register_space.o(.text.write_register) for [Anonymous Symbol]
    register_space.o(.text.read_register) refers to register_space.o(.bss.MPA_Registers) for [Anonymous Symbol]
    register_space.o(.text.read_register) refers to register_space.o(.bss.Common_Registers) for [Anonymous Symbol]
    register_space.o(.ARM.exidx.text.read_register) refers to register_space.o(.text.read_register) for [Anonymous Symbol]
    timer.o(.text.TIMER1_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    timer.o(.text.TIMER1_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for TIMER_CntStructInit
    timer.o(.text.TIMER1_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for TIMER_CntInit
    timer.o(.text.TIMER1_init) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for TIMER_BRGInit
    timer.o(.text.TIMER1_init) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for TIMER_Cmd
    timer.o(.text.TIMER1_init) refers to timer.o(.bss.TIMER1InitStruct) for TIMER1InitStruct
    timer.o(.ARM.exidx.text.TIMER1_init) refers to timer.o(.text.TIMER1_init) for [Anonymous Symbol]
    timer.o(.text.TIMER2_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    timer.o(.text.TIMER2_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for TIMER_CntStructInit
    timer.o(.text.TIMER2_init) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for TIMER_CntInit
    timer.o(.text.TIMER2_init) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for TIMER_BRGInit
    timer.o(.text.TIMER2_init) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for TIMER_Cmd
    timer.o(.text.TIMER2_init) refers to timer.o(.bss.TIMER2InitStruct) for TIMER2InitStruct
    timer.o(.ARM.exidx.text.TIMER2_init) refers to timer.o(.text.TIMER2_init) for [Anonymous Symbol]
    timer.o(.text.Delay_milli) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    timer.o(.ARM.exidx.text.Delay_milli) refers to timer.o(.text.Delay_milli) for [Anonymous Symbol]
    timer.o(.text.Delay_micro) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    timer.o(.ARM.exidx.text.Delay_micro) refers to timer.o(.text.Delay_micro) for [Anonymous Symbol]
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for UART_ReceiveData
    uart.o(.text.UART1_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    uart.o(.text.UART1_IRQHandler) refers to uart.o(EXECUTABLE_MEMORY_SECTION) for UART1
    uart.o(.ARM.exidx.text.UART1_IRQHandler) refers to uart.o(.text.UART1_IRQHandler) for [Anonymous Symbol]
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for UART_ReceiveData
    uart.o(.text.UART2_IRQHandler) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    uart.o(.text.UART2_IRQHandler) refers to uart.o(EXECUTABLE_MEMORY_SECTION) for UART2
    uart.o(.ARM.exidx.text.UART2_IRQHandler) refers to uart.o(.text.UART2_IRQHandler) for [Anonymous Symbol]
    uart.o(.text.uart_init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_BRGInit) for UART_BRGInit
    uart.o(.text.uart_init) refers to uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_Init) for UART_Init
    uart.o(.text.uart_init) refers to uart.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_ITConfig) for UART_ITConfig
    uart.o(.text.uart_init) refers to mdr32fxqi_uart.o(.text.UART_Cmd) for UART_Cmd
    uart.o(.ARM.exidx.text.uart_init) refers to uart.o(.text.uart_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.__NVIC_SetPriority) refers to uart.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    uart.o(.text.uart_write) refers to mdr32fxqi_uart.o(.text.UART_SendData) for UART_SendData
    uart.o(.text.uart_write) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(.text.uart_write) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    uart.o(.ARM.exidx.text.uart_write) refers to uart.o(.text.uart_write) for [Anonymous Symbol]
    uart.o(.text.uart_read) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for TIMER_GetCounter
    uart.o(.text.uart_read) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    uart.o(.ARM.exidx.text.uart_read) refers to uart.o(.text.uart_read) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_pos) refers to uart.o(.text.uart_set_pos) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_read_pos) refers to uart.o(.text.uart_read_pos) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_get_buf_counter) refers to uart.o(.text.uart_get_buf_counter) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_clean) refers to uart.o(.text.uart_clean) for [Anonymous Symbol]
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_StructInit) for DMA_StructInit
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_Init) for DMA_Init
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_uart.o(.text.UART_DMACmd) for UART_DMACmd
    uart.o(.text.DMA_UART_RX_init) refers to mdr32fxqi_dma.o(.text.DMA_Cmd) for DMA_Cmd
    uart.o(.text.DMA_UART_RX_init) refers to uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(.ARM.exidx.text.DMA_UART_RX_init) refers to uart.o(.text.DMA_UART_RX_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_read_timeout) refers to uart.o(.text.uart_set_read_timeout) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart_set_write_timeout) refers to uart.o(.text.uart_set_write_timeout) for [Anonymous Symbol]
    startup_mdr32f1qi.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(RESET) refers to startup_mdr32f1qi.o(STACK) for __initial_sp
    startup_mdr32f1qi.o(RESET) refers to startup_mdr32f1qi.o(.text) for Reset_Handler
    startup_mdr32f1qi.o(RESET) refers to dma.o(.text.DMA_IRQHandler) for DMA_IRQHandler
    startup_mdr32f1qi.o(RESET) refers to uart.o(.text.UART1_IRQHandler) for UART1_IRQHandler
    startup_mdr32f1qi.o(RESET) refers to uart.o(.text.UART2_IRQHandler) for UART2_IRQHandler
    startup_mdr32f1qi.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f1qi.o(.text) refers to system_mdr32f1qi.o(.text.SystemInit) for SystemInit
    startup_mdr32f1qi.o(.text) refers to __main.o(!!!main) for __main
    startup_mdr32f1qi.o(.text) refers to startup_mdr32f1qi.o(HEAP) for Heap_Mem
    startup_mdr32f1qi.o(.text) refers to startup_mdr32f1qi.o(STACK) for Stack_Mem
    system_mdr32f1qi.o(.text.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    system_mdr32f1qi.o(.text.SystemCoreClockUpdate) refers to system_mdr32f1qi.o(.data.SystemCoreClock) for SystemCoreClock
    system_mdr32f1qi.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mdr32f1qi.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_mdr32f1qi.o(.text.SystemInit) refers to system_mdr32f1qi.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system_mdr32f1qi.o(.ARM.exidx.text.SystemInit) refers to system_mdr32f1qi.o(.text.SystemInit) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_DeInit) refers to mdr32fxqi_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_Init) refers to mdr32fxqi_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_StructInit) refers to mdr32fxqi_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_SetTrim) refers to mdr32fxqi_adc.o(.text.ADC_SetTrim) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Init) refers to mdr32fxqi_adc.o(.text.ADC1_Init) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADCx_StructInit) refers to mdr32fxqi_adc.o(.text.ADCx_StructInit) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Cmd) refers to mdr32fxqi_adc.o(.text.ADC1_Cmd) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetChannel) refers to mdr32fxqi_adc.o(.text.ADC1_SetChannel) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetChannels) refers to mdr32fxqi_adc.o(.text.ADC1_SetChannels) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_OperationModeConfig) refers to mdr32fxqi_adc.o(.text.ADC1_OperationModeConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SamplingModeConfig) refers to mdr32fxqi_adc.o(.text.ADC1_SamplingModeConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ChannelSwithingConfig) refers to mdr32fxqi_adc.o(.text.ADC1_ChannelSwithingConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_LevelsConfig) refers to mdr32fxqi_adc.o(.text.ADC1_LevelsConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetLowLevel) refers to mdr32fxqi_adc.o(.text.ADC1_SetLowLevel) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetHighLevel) refers to mdr32fxqi_adc.o(.text.ADC1_SetHighLevel) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Start) refers to mdr32fxqi_adc.o(.text.ADC1_Start) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetResult) refers to mdr32fxqi_adc.o(.text.ADC1_GetResult) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetStatus) refers to mdr32fxqi_adc.o(.text.ADC_GetStatus) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetStatus) refers to mdr32fxqi_adc.o(.text.ADC1_GetStatus) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.text.ADC_GetFlagStatus) refers to mdr32fxqi_adc.o(.text.ADC_GetStatus) for ADC_GetStatus
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to mdr32fxqi_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetFlagStatus) refers to mdr32fxqi_adc.o(.text.ADC1_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ClearOverwriteFlag) refers to mdr32fxqi_adc.o(.text.ADC1_ClearOverwriteFlag) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ClearOutOfRangeFlag) refers to mdr32fxqi_adc.o(.text.ADC1_ClearOutOfRangeFlag) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to mdr32fxqi_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ITConfig) refers to mdr32fxqi_adc.o(.text.ADC1_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.text.ADC_GetITStatus) refers to mdr32fxqi_adc.o(.text.ADC_GetStatus) for ADC_GetStatus
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to mdr32fxqi_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetITStatus) refers to mdr32fxqi_adc.o(.text.ADC1_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_DeInit) refers to mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_DeInit) refers to mdr32fxqi_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlDataInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_CtrlInit) refers to mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_Init) refers to mdr32fxqi_dma.o(.text.DMA_SG_Init) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.text.DMA_Init) refers to mdr32fxqi_dma.o(.text.DMA_CtrlDataInit) for DMA_CtrlDataInit
    mdr32fxqi_dma.o(.text.DMA_Init) refers to mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION) for DMA_ControlTable
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Init) refers to mdr32fxqi_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_StructInit) refers to mdr32fxqi_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_StructInit) refers to mdr32fxqi_dma.o(.text.DMA_SG_StructInit) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Cmd) refers to mdr32fxqi_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Request) refers to mdr32fxqi_dma.o(.text.DMA_Request) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_ClearError) refers to mdr32fxqi_dma.o(.text.DMA_ClearError) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetCurrTransferCounter) refers to mdr32fxqi_dma.o(.text.DMA_GetCurrTransferCounter) for [Anonymous Symbol]
    mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to mdr32fxqi_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_DeInit) refers to mdr32fxqi_port.o(.text.PORT_DeInit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_Init) refers to mdr32fxqi_port.o(.text.PORT_Init) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_StructInit) refers to mdr32fxqi_port.o(.text.PORT_StructInit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputDataBit) refers to mdr32fxqi_port.o(.text.PORT_ReadInputDataBit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputData) refers to mdr32fxqi_port.o(.text.PORT_ReadInputData) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_SetBits) refers to mdr32fxqi_port.o(.text.PORT_SetBits) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_ResetBits) refers to mdr32fxqi_port.o(.text.PORT_ResetBits) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_WriteBit) refers to mdr32fxqi_port.o(.text.PORT_WriteBit) for [Anonymous Symbol]
    mdr32fxqi_port.o(.ARM.exidx.text.PORT_Write) refers to mdr32fxqi_port.o(.text.PORT_Write) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) for RST_CLK_WarmDeInit
    mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for RST_CLK_PCLKcmd
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_DeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd) for RST_CLK_HSIcmd
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) for RST_CLK_HSIstatus
    mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for RST_CLK_CPUclkSelection
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_WarmDeInit) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_PCLKcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelection) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetFlagStatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2config) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2config) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2status) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIadjust) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIadjust) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIadjust) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIadjust) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLuse) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLconfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLconfig) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLuse) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLuse) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLcmd) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLcmd) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus) for RST_CLK_GetFlagStatus
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLstatus) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkSelection) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkSelection) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSIclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSIclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEclkPrescaler) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEclkPrescaler) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSEclkEnable) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSEclkEnable) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelectionC1) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelectionC1) for [Anonymous Symbol]
    mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetClocksFreq) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DeInit) refers to mdr32fxqi_timer.o(.text.TIMER_DeInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntInit) refers to mdr32fxqi_timer.o(.text.TIMER_CntInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_CntStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounter) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounter) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounter) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounter) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntPrescaler) refers to mdr32fxqi_timer.o(.text.TIMER_SetCntPrescaler) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntPrescaler) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntPrescaler) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntAutoreload) refers to mdr32fxqi_timer.o(.text.TIMER_SetCntAutoreload) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntAutoreloadConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CntAutoreloadConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntAutoreload) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntAutoreload) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntEventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CntEventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_FilterSamplingConfig) refers to mdr32fxqi_timer.o(.text.TIMER_FilterSamplingConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CounterModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_CounterModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounterDirection) refers to mdr32fxqi_timer.o(.text.TIMER_SetCounterDirection) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRInputConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRInputConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRFilterConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRFilterConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPrescalerConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRPrescalerConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ETRPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRKPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_BRKPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounterDirection) refers to mdr32fxqi_timer.o(.text.TIMER_GetCounterDirection) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntWriteComplete) refers to mdr32fxqi_timer.o(.text.TIMER_GetCntWriteComplete) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare) refers to mdr32fxqi_timer.o(.text.TIMER_SetChnCompare) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompareConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCompareConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnCapture) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare1) refers to mdr32fxqi_timer.o(.text.TIMER_SetChnCompare1) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompare1Config) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCompare1Config) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture1) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnCapture1) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETR_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_ChnETR_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETRResetConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnETRResetConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnBRKResetConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnBRKResetConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnREFFormatConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnREFFormatConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCapturePrescalerConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCapturePrescalerConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnEventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnEventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnFilterConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnFilterConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnWriteComplete) refers to mdr32fxqi_timer.o(.text.TIMER_GetChnWriteComplete) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_EventSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_EventSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_Cmd) refers to mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutStructInit) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutStructInit) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutSourceConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutSourceConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutModeConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutModeConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutPolarityConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnNOutPolarityConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutDTGConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ChnOutDTGConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetFlagStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ClearFlag) refers to mdr32fxqi_timer.o(.text.TIMER_ClearFlag) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DMACmd) refers to mdr32fxqi_timer.o(.text.TIMER_DMACmd) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ITConfig) refers to mdr32fxqi_timer.o(.text.TIMER_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetITStatus) refers to mdr32fxqi_timer.o(.text.TIMER_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRGInit) refers to mdr32fxqi_timer.o(.text.TIMER_BRGInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DeInit) refers to mdr32fxqi_uart.o(.text.UART_DeInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.text.UART_Init) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for RST_CLK_GetClocksFreq
    mdr32fxqi_uart.o(.text.UART_Init) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_Init) refers to mdr32fxqi_uart.o(.text.UART_Init) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_StructInit) refers to mdr32fxqi_uart.o(.text.UART_StructInit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_Cmd) refers to mdr32fxqi_uart.o(.text.UART_Cmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ITConfig) refers to mdr32fxqi_uart.o(.text.UART_ITConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatus) refers to mdr32fxqi_uart.o(.text.UART_GetITStatus) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatusMasked) refers to mdr32fxqi_uart.o(.text.UART_GetITStatusMasked) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ClearITPendingBit) refers to mdr32fxqi_uart.o(.text.UART_ClearITPendingBit) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMAConfig) refers to mdr32fxqi_uart.o(.text.UART_DMAConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMACmd) refers to mdr32fxqi_uart.o(.text.UART_DMACmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_SendData) refers to mdr32fxqi_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_ReceiveData) refers to mdr32fxqi_uart.o(.text.UART_ReceiveData) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_BreakLine) refers to mdr32fxqi_uart.o(.text.UART_BreakLine) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.text.UART_IrDAConfig) refers to mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq) for RST_CLK_GetClocksFreq
    mdr32fxqi_uart.o(.text.UART_IrDAConfig) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDAConfig) refers to mdr32fxqi_uart.o(.text.UART_IrDAConfig) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDACmd) refers to mdr32fxqi_uart.o(.text.UART_IrDACmd) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetFlagStatus) refers to mdr32fxqi_uart.o(.text.UART_GetFlagStatus) for [Anonymous Symbol]
    mdr32fxqi_uart.o(.ARM.exidx.text.UART_BRGInit) refers to mdr32fxqi_uart.o(.text.UART_BRGInit) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mdr32f1qi.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.text.Delay), (36 bytes).
    Removing adc.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing adc.o(.text.ADCInit), (36 bytes).
    Removing adc.o(.ARM.exidx.text.ADCInit), (8 bytes).
    Removing adc.o(.text.ADC_Channel_Init), (44 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Channel_Init), (8 bytes).
    Removing adc.o(.text.ADC_start_mesuare), (1624 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_start_mesuare), (8 bytes).
    Removing adc.o(.text.averaging), (68 bytes).
    Removing adc.o(.ARM.exidx.text.averaging), (8 bytes).
    Removing adc.o(.text.averaging_result), (60 bytes).
    Removing adc.o(.ARM.exidx.text.averaging_result), (8 bytes).
    Removing adc.o(.bss.ADC), (24 bytes).
    Removing adc.o(.bss.ADC3), (28 bytes).
    Removing clock.o(.text), (0 bytes).
    Removing clock.o(.ARM.exidx.text.CLOCK_Init), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_common_init), (8 bytes).
    Removing dma.o(.ARM.exidx.text.DMA_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.request_data), (140 bytes).
    Removing main.o(.ARM.exidx.text.request_data), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing ports.o(.text), (0 bytes).
    Removing ports.o(.ARM.exidx.text.PortsInit), (8 bytes).
    Removing protocol.o(.text), (0 bytes).
    Removing protocol.o(.text.Protocol_write), (328 bytes).
    Removing protocol.o(.ARM.exidx.text.Protocol_write), (8 bytes).
    Removing protocol.o(.text.Protocol_find_crc), (160 bytes).
    Removing protocol.o(.ARM.exidx.text.Protocol_find_crc), (8 bytes).
    Removing protocol.o(.text.Protocol_read), (84 bytes).
    Removing protocol.o(.ARM.exidx.text.Protocol_read), (8 bytes).
    Removing protocol.o(.text.Protocol_do_cmd), (12 bytes).
    Removing protocol.o(.ARM.exidx.text.Protocol_do_cmd), (8 bytes).
    Removing protocol.o(.text.Crc32), (192 bytes).
    Removing protocol.o(.ARM.exidx.text.Crc32), (8 bytes).
    Removing register_space.o(.text), (0 bytes).
    Removing register_space.o(.text.registers_ini), (112 bytes).
    Removing register_space.o(.ARM.exidx.text.registers_ini), (8 bytes).
    Removing register_space.o(.text.write_register), (160 bytes).
    Removing register_space.o(.ARM.exidx.text.write_register), (8 bytes).
    Removing register_space.o(.text.read_register), (248 bytes).
    Removing register_space.o(.ARM.exidx.text.read_register), (8 bytes).
    Removing register_space.o(.rodata.cst4), (12 bytes).
    Removing register_space.o(.rodata..L__const.registers_ini.PLC_Config), (2 bytes).
    Removing register_space.o(.rodata.str1.1), (2 bytes).
    Removing register_space.o(.bss.Common_Registers), (1258 bytes).
    Removing register_space.o(.bss.MPA_Registers), (1758 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER1_init), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER2_init), (8 bytes).
    Removing timer.o(.text.Delay_milli), (44 bytes).
    Removing timer.o(.ARM.exidx.text.Delay_milli), (8 bytes).
    Removing timer.o(.text.Delay_micro), (40 bytes).
    Removing timer.o(.ARM.exidx.text.Delay_micro), (8 bytes).
    Removing timer.o(.bss.sTIM1_ChnInit), (24 bytes).
    Removing timer.o(.bss.sTIM2_ChnInit), (24 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART1_IRQHandler), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART2_IRQHandler), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing uart.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_write), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_read), (8 bytes).
    Removing uart.o(.text.uart_set_pos), (44 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_pos), (8 bytes).
    Removing uart.o(.text.uart_read_pos), (12 bytes).
    Removing uart.o(.ARM.exidx.text.uart_read_pos), (8 bytes).
    Removing uart.o(.text.uart_get_buf_counter), (12 bytes).
    Removing uart.o(.ARM.exidx.text.uart_get_buf_counter), (8 bytes).
    Removing uart.o(.text.uart_clean), (20 bytes).
    Removing uart.o(.ARM.exidx.text.uart_clean), (8 bytes).
    Removing uart.o(.ARM.exidx.text.DMA_UART_RX_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_read_timeout), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart_set_write_timeout), (8 bytes).
    Removing system_mdr32f1qi.o(.text), (0 bytes).
    Removing system_mdr32f1qi.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_mdr32f1qi.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing mdr32fxqi_adc.o(.text), (0 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_DeInit), (68 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_Init), (76 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_StructInit), (34 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_SetTrim), (40 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_SetTrim), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_Init), (148 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Init), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADCx_StructInit), (58 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADCx_StructInit), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_Cmd), (56 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Cmd), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_SetChannel), (48 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetChannel), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_SetChannels), (20 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetChannels), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_OperationModeConfig), (56 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_OperationModeConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_SamplingModeConfig), (44 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SamplingModeConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_ChannelSwithingConfig), (44 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ChannelSwithingConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_LevelsConfig), (68 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_LevelsConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_SetLowLevel), (20 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetLowLevel), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_SetHighLevel), (20 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_SetHighLevel), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_Start), (16 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_Start), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_GetResult), (12 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetResult), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_GetStatus), (12 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetStatus), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_GetStatus), (12 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetStatus), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_GetFlagStatus), (48 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_GetFlagStatus), (48 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_ClearOverwriteFlag), (16 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ClearOverwriteFlag), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_ClearOutOfRangeFlag), (16 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ClearOutOfRangeFlag), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_ITConfig), (80 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_ITConfig), (68 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_ITConfig), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC_GetITStatus), (62 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing mdr32fxqi_adc.o(.text.ADC1_GetITStatus), (60 bytes).
    Removing mdr32fxqi_adc.o(.ARM.exidx.text.ADC1_GetITStatus), (8 bytes).
    Removing mdr32fxqi_dma.o(.text), (0 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlDataInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_CtrlInit), (76 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_CtrlInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_CtrlInit), (28 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_CtrlInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_Init), (260 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_Init), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_SG_StructInit), (38 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_SG_StructInit), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_Request), (28 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_Request), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_ClearError), (12 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_ClearError), (8 bytes).
    Removing mdr32fxqi_dma.o(.text.DMA_GetCurrTransferCounter), (80 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetCurrTransferCounter), (8 bytes).
    Removing mdr32fxqi_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_port.o(.text), (0 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_DeInit), (42 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_DeInit), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_Init), (8 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_StructInit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_ReadInputDataBit), (50 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputDataBit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_ReadInputData), (12 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ReadInputData), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_SetBits), (16 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_SetBits), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_ResetBits), (16 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_ResetBits), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_WriteBit), (38 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_WriteBit), (8 bytes).
    Removing mdr32fxqi_port.o(.text.PORT_Write), (16 bytes).
    Removing mdr32fxqi_port.o(.ARM.exidx.text.PORT_Write), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text), (0 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_DeInit), (40 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_DeInit), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_WarmDeInit), (152 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_WarmDeInit), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_PCLKcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIcmd), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelection), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2config), (72 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2config), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSE2status), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSE2status), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEconfig), (72 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSEstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSEstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIadjust), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIadjust), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIcmd), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIadjust), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIadjust), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_LSIstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_LSIstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLuse), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPU_PLLstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLconfig), (116 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLconfig), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLuse), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLuse), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLcmd), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLcmd), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USB_PLLstatus), (100 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USB_PLLstatus), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkPrescaler), (60 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_USBclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_USBclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkSelection), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkSelection), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkPrescaler), (48 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_ADCclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_ADCclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSIclkPrescaler), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSIclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSIclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSIclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEclkPrescaler), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_HSEclkPrescaler), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_RTC_HSEclkEnable), (64 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_RTC_HSEclkEnable), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelectionC1), (44 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_CPUclkSelectionC1), (8 bytes).
    Removing mdr32fxqi_rst_clk.o(.ARM.exidx.text.RST_CLK_GetClocksFreq), (8 bytes).
    Removing mdr32fxqi_timer.o(.text), (0 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_DeInit), (162 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DeInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCounter), (16 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounter), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounter), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCntPrescaler), (18 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntPrescaler), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntPrescaler), (14 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntPrescaler), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCntAutoreload), (16 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCntAutoreload), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CntAutoreloadConfig), (48 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntAutoreloadConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntAutoreload), (12 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntAutoreload), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CntEventSourceConfig), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CntEventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_FilterSamplingConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_FilterSamplingConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_CounterModeConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_CounterModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetCounterDirection), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetCounterDirection), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRInputConfig), (66 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRInputConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRFilterConfig), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRFilterConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRPrescalerConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPrescalerConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ETRPolarityConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ETRPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_BRKPolarityConfig), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRKPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCounterDirection), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCounterDirection), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetCntWriteComplete), (40 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetCntWriteComplete), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnInit), (122 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnStructInit), (58 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetChnCompare), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCompareConfig), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompareConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnCapture), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_SetChnCompare1), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_SetChnCompare1), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCompare1Config), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCompare1Config), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnCapture1), (38 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnCapture1), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnETR_Cmd), (84 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETR_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnETRResetConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnETRResetConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnBRKResetConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnBRKResetConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnREFFormatConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnREFFormatConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCapturePrescalerConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCapturePrescalerConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnEventSourceConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnEventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnFilterConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnFilterConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetChnWriteComplete), (62 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetChnWriteComplete), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_EventSourceConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_EventSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnCCR1_Cmd), (80 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnCCR1_Cmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutInit), (92 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutStructInit), (46 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutStructInit), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutConfig), (92 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutSourceConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutModeConfig), (68 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutPolarityConfig), (70 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutConfig), (96 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutSourceConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutSourceConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutModeConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutModeConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnNOutPolarityConfig), (72 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnNOutPolarityConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ChnOutDTGConfig), (58 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ChnOutDTGConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetStatus), (12 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetFlagStatus), (42 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ClearFlag), (18 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ClearFlag), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_DMACmd), (136 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_DMACmd), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_ITConfig), (54 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_ITConfig), (8 bytes).
    Removing mdr32fxqi_timer.o(.text.TIMER_GetITStatus), (58 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_GetITStatus), (8 bytes).
    Removing mdr32fxqi_timer.o(.ARM.exidx.text.TIMER_BRGInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.text), (0 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_DeInit), (62 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DeInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_StructInit), (42 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_StructInit), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_Cmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ITConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_GetITStatus), (52 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatus), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_GetITStatusMasked), (50 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetITStatusMasked), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ClearITPendingBit), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_DMAConfig), (28 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMAConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_DMACmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_ReceiveData), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_BreakLine), (48 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_BreakLine), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_IrDAConfig), (60 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDAConfig), (8 bytes).
    Removing mdr32fxqi_uart.o(.text.UART_IrDACmd), (48 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_IrDACmd), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_GetFlagStatus), (8 bytes).
    Removing mdr32fxqi_uart.o(.ARM.exidx.text.UART_BRGInit), (8 bytes).

377 unused section(s) (total 15502 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    CLOCK.c                                  0x00000000   Number         0  clock.o ABSOLUTE
    DMA.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    MDR32FxQI_adc.c                          0x00000000   Number         0  mdr32fxqi_adc.o ABSOLUTE
    MDR32FxQI_dma.c                          0x00000000   Number         0  mdr32fxqi_dma.o ABSOLUTE
    MDR32FxQI_port.c                         0x00000000   Number         0  mdr32fxqi_port.o ABSOLUTE
    MDR32FxQI_rst_clk.c                      0x00000000   Number         0  mdr32fxqi_rst_clk.o ABSOLUTE
    MDR32FxQI_timer.c                        0x00000000   Number         0  mdr32fxqi_timer.o ABSOLUTE
    MDR32FxQI_uart.c                         0x00000000   Number         0  mdr32fxqi_uart.o ABSOLUTE
    PORTS.c                                  0x00000000   Number         0  ports.o ABSOLUTE
    PROTOCOL.c                               0x00000000   Number         0  protocol.o ABSOLUTE
    REGISTER_SPACE.c                         0x00000000   Number         0  register_space.o ABSOLUTE
    RTE\Device\MDR32F1QI\startup_MDR32F1QI.S 0x00000000   Number         0  startup_mdr32f1qi.o ABSOLUTE
    TIMER.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    UART.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    system_MDR32F1QI.c                       0x00000000   Number         0  system_mdr32f1qi.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mdr32f1qi.o(RESET)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0000013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000014a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000014e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000014e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000156   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000158   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000158   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000015c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000164   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x0000019c   Section      116  startup_mdr32f1qi.o(.text)
    .text                                    0x00000210   Section        0  rt_memcpy.o(.text)
    .text                                    0x00000294   Section      364  aeabi_sdiv.o(.text)
    .text                                    0x00000400   Section        0  heapauxi.o(.text)
    .text                                    0x00000406   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000444   Section        0  exit.o(.text)
    .text                                    0x00000454   Section        8  libspace.o(.text)
    .text                                    0x0000045c   Section        0  sys_exit.o(.text)
    .text                                    0x00000468   Section        2  use_no_semi.o(.text)
    .text                                    0x0000046a   Section        0  indicate_semi.o(.text)
    .text                                    0x0000046a   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x000004a4   Section        0  clock.o(.text.CLOCK_Init)
    [Anonymous Symbol]                       0x000004f4   Section        0  mdr32fxqi_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x00000528   Section        0  mdr32fxqi_dma.o(.text.DMA_CtrlDataInit)
    [Anonymous Symbol]                       0x000005c8   Section        0  mdr32fxqi_dma.o(.text.DMA_DeInit)
    __arm_cp.0_2                             0x00000604   Number         4  mdr32fxqi_dma.o(.text.DMA_DeInit)
    __arm_cp.0_5                             0x00000608   Number         4  mdr32fxqi_dma.o(.text.DMA_DeInit)
    [Anonymous Symbol]                       0x0000060c   Section        0  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_3                            0x000006f4   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_4                            0x000006f8   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_6                            0x000006fc   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.13_7                            0x00000700   Number         4  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    [Anonymous Symbol]                       0x00000704   Section        0  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_0                             0x00000734   Number         4  dma.o(.text.DMA_IRQHandler)
    __arm_cp.1_1                             0x00000738   Number         4  dma.o(.text.DMA_IRQHandler)
    [Anonymous Symbol]                       0x0000073c   Section        0  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_0                             0x00000828   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_1                             0x0000082c   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_2                             0x00000830   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_3                             0x00000834   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_5                             0x00000838   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_7                             0x0000083c   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_8                             0x00000840   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_9                             0x00000844   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_10                            0x00000848   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    __arm_cp.6_11                            0x0000084c   Number         4  mdr32fxqi_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x00000850   Section        0  mdr32fxqi_dma.o(.text.DMA_StructInit)
    [Anonymous Symbol]                       0x00000874   Section        0  uart.o(.text.DMA_UART_RX_init)
    __arm_cp.11_0                            0x000008f8   Number         4  uart.o(.text.DMA_UART_RX_init)
    __arm_cp.11_1                            0x000008fc   Number         4  uart.o(.text.DMA_UART_RX_init)
    [Anonymous Symbol]                       0x00000900   Section        0  dma.o(.text.DMA_common_init)
    __arm_cp.0_0                             0x00000928   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_1                             0x0000092c   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_2                             0x00000930   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_3                             0x00000934   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_4                             0x00000938   Number         4  dma.o(.text.DMA_common_init)
    __arm_cp.0_5                             0x0000093c   Number         4  dma.o(.text.DMA_common_init)
    [Anonymous Symbol]                       0x00000940   Section        0  mdr32fxqi_port.o(.text.PORT_Init)
    __arm_cp.1_0                             0x00000a88   Number         4  mdr32fxqi_port.o(.text.PORT_Init)
    [Anonymous Symbol]                       0x00000a8c   Section        0  mdr32fxqi_port.o(.text.PORT_StructInit)
    __arm_cp.2_0                             0x00000ac0   Number         4  mdr32fxqi_port.o(.text.PORT_StructInit)
    [Anonymous Symbol]                       0x00000ac4   Section        0  ports.o(.text.PortsInit)
    __arm_cp.0_0                             0x00000b1c   Number         4  ports.o(.text.PortsInit)
    [Anonymous Symbol]                       0x00000b20   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd)
    [Anonymous Symbol]                       0x00000b54   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    __arm_cp.17_1                            0x00000bc4   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    [Anonymous Symbol]                       0x00000bc8   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus)
    [Anonymous Symbol]                       0x00000c2c   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse)
    [Anonymous Symbol]                       0x00000c64   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler)
    [Anonymous Symbol]                       0x00000c8c   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection)
    [Anonymous Symbol]                       0x00000cb4   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_0                            0x00000f08   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_1                            0x00000f0c   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_2                            0x00000f10   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    __arm_cp.36_3                            0x00000f14   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    [Anonymous Symbol]                       0x00000f18   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    __arm_cp.8_0                             0x00000f68   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    __arm_cp.8_1                             0x00000f6c   Number         4  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    [Anonymous Symbol]                       0x00000f70   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig)
    [Anonymous Symbol]                       0x00000fb4   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus)
    [Anonymous Symbol]                       0x00001018   Section        0  mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd)
    [Anonymous Symbol]                       0x00001044   Section        0  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_0                             0x000010f4   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_1                             0x000010f8   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_2                             0x000010fc   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_4                             0x00001100   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_5                             0x00001104   Number         4  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00001108   Section        0  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_0                             0x00001144   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_1                             0x00001148   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_2                             0x0000114c   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_3                             0x00001150   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_4                             0x00001154   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_5                             0x00001158   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_6                             0x0000115c   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_7                             0x00001160   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_10                            0x00001164   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    __arm_cp.1_11                            0x00001168   Number         4  system_mdr32f1qi.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0000116c   Section        0  timer.o(.text.TIMER1_init)
    __arm_cp.0_0                             0x000011a8   Number         4  timer.o(.text.TIMER1_init)
    __arm_cp.0_1                             0x000011ac   Number         4  timer.o(.text.TIMER1_init)
    __arm_cp.0_2                             0x000011b0   Number         4  timer.o(.text.TIMER1_init)
    [Anonymous Symbol]                       0x000011b4   Section        0  timer.o(.text.TIMER2_init)
    __arm_cp.1_0                             0x000011f0   Number         4  timer.o(.text.TIMER2_init)
    __arm_cp.1_1                             0x000011f4   Number         4  timer.o(.text.TIMER2_init)
    [Anonymous Symbol]                       0x000011f8   Section        0  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_0                            0x000012ec   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_1                            0x000012f0   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_3                            0x000012f4   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_4                            0x000012f8   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    __arm_cp.57_5                            0x000012fc   Number         4  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    [Anonymous Symbol]                       0x00001300   Section        0  mdr32fxqi_timer.o(.text.TIMER_Cmd)
    [Anonymous Symbol]                       0x00001334   Section        0  mdr32fxqi_timer.o(.text.TIMER_CntInit)
    [Anonymous Symbol]                       0x0000138c   Section        0  mdr32fxqi_timer.o(.text.TIMER_CntStructInit)
    [Anonymous Symbol]                       0x000013c6   Section        0  mdr32fxqi_timer.o(.text.TIMER_GetCounter)
    [Anonymous Symbol]                       0x000013d4   Section        0  uart.o(.text.UART1_IRQHandler)
    __arm_cp.0_0                             0x00001414   Number         4  uart.o(.text.UART1_IRQHandler)
    [Anonymous Symbol]                       0x00001418   Section        0  uart.o(.text.UART2_IRQHandler)
    __arm_cp.1_0                             0x00001458   Number         4  uart.o(.text.UART2_IRQHandler)
    [Anonymous Symbol]                       0x0000145c   Section        0  mdr32fxqi_uart.o(.text.UART_BRGInit)
    __arm_cp.16_0                            0x000014cc   Number         4  mdr32fxqi_uart.o(.text.UART_BRGInit)
    [Anonymous Symbol]                       0x000014d0   Section        0  mdr32fxqi_uart.o(.text.UART_ClearITPendingBit)
    [Anonymous Symbol]                       0x000014e4   Section        0  mdr32fxqi_uart.o(.text.UART_Cmd)
    __arm_cp.3_0                             0x00001510   Number         4  mdr32fxqi_uart.o(.text.UART_Cmd)
    [Anonymous Symbol]                       0x00001514   Section        0  mdr32fxqi_uart.o(.text.UART_DMACmd)
    [Anonymous Symbol]                       0x00001544   Section        0  mdr32fxqi_uart.o(.text.UART_GetFlagStatus)
    [Anonymous Symbol]                       0x00001576   Section        0  mdr32fxqi_uart.o(.text.UART_ITConfig)
    [Anonymous Symbol]                       0x000015a4   Section        0  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_0                             0x000016a8   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_1                             0x000016ac   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    __arm_cp.1_3                             0x000016b0   Number         4  mdr32fxqi_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x000016b4   Section        0  mdr32fxqi_uart.o(.text.UART_ReceiveData)
    [Anonymous Symbol]                       0x000016c2   Section        0  mdr32fxqi_uart.o(.text.UART_SendData)
    __NVIC_ClearPendingIRQ                   0x000016d5   Thumb Code    40  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000016d4   Section        0  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.1_0                             0x000016fc   Number         4  mdr32fxqi_dma.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00001701   Thumb Code    40  uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001700   Section        0  uart.o(.text.__NVIC_EnableIRQ)
    __arm_cp.3_0                             0x00001728   Number         4  uart.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x0000172d   Thumb Code   124  uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x0000172c   Section        0  uart.o(.text.__NVIC_SetPriority)
    __arm_cp.4_0                             0x000017a8   Number         4  uart.o(.text.__NVIC_SetPriority)
    __arm_cp.4_1                             0x000017ac   Number         4  uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000017b0   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00001868   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x0000186c   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x00001870   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x00001874   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x00001878   Section        0  uart.o(.text.uart_init)
    [Anonymous Symbol]                       0x00001920   Section        0  uart.o(.text.uart_read)
    [Anonymous Symbol]                       0x00001ab4   Section        0  uart.o(.text.uart_set_read_timeout)
    [Anonymous Symbol]                       0x00001ace   Section        0  uart.o(.text.uart_set_write_timeout)
    [Anonymous Symbol]                       0x00001ae8   Section        0  uart.o(.text.uart_write)
    __arm_cp.5_0                             0x00001b94   Number         4  uart.o(.text.uart_write)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    Heap_Mem                                 0x200000a8   Data        4096  startup_mdr32f1qi.o(HEAP)
    HEAP                                     0x200000a8   Section     4096  startup_mdr32f1qi.o(HEAP)
    Stack_Mem                                0x200010a8   Data        4096  startup_mdr32f1qi.o(STACK)
    STACK                                    0x200010a8   Section     4096  startup_mdr32f1qi.o(STACK)
    __initial_sp                             0x200020a8   Data           0  startup_mdr32f1qi.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mdr32f1qi.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0000013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0000014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000157   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000165   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000165   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x0000019d   Thumb Code     8  startup_mdr32f1qi.o(.text)
    NMI_Handler                              0x000001a5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    HardFault_Handler                        0x000001a7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SVC_Handler                              0x000001a9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    PendSV_Handler                           0x000001ab   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SysTick_Handler                          0x000001ad   Thumb Code     2  startup_mdr32f1qi.o(.text)
    MIL_STD_1553B2_IRQHandler                0x000001af   Thumb Code     2  startup_mdr32f1qi.o(.text)
    MIL_STD_1553B1_IRQHandler                0x000001b1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    USB_IRQHandler                           0x000001b3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    CAN1_IRQHandler                          0x000001b5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    CAN2_IRQHandler                          0x000001b7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP1_IRQHandler                          0x000001bf   Thumb Code     2  startup_mdr32f1qi.o(.text)
    BUSY_IRQHandler                          0x000001c1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429R_IRQHandler                     0x000001c3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    POWER_IRQHandler                         0x000001c5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    WWDG_IRQHandler                          0x000001c7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER4_IRQHandler                        0x000001c9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER1_IRQHandler                        0x000001cb   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER2_IRQHandler                        0x000001cd   Thumb Code     2  startup_mdr32f1qi.o(.text)
    TIMER3_IRQHandler                        0x000001cf   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ADC_IRQHandler                           0x000001d1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ETHERNET_IRQHandler                      0x000001d3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP3_IRQHandler                          0x000001d5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    SSP2_IRQHandler                          0x000001d7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T1_IRQHandler                    0x000001d9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T2_IRQHandler                    0x000001db   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T3_IRQHandler                    0x000001dd   Thumb Code     2  startup_mdr32f1qi.o(.text)
    ARINC429T4_IRQHandler                    0x000001df   Thumb Code     2  startup_mdr32f1qi.o(.text)
    BKP_IRQHandler                           0x000001e1   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT1_IRQHandler                      0x000001e3   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT2_IRQHandler                      0x000001e5   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT3_IRQHandler                      0x000001e7   Thumb Code     2  startup_mdr32f1qi.o(.text)
    EXT_INT4_IRQHandler                      0x000001e9   Thumb Code     2  startup_mdr32f1qi.o(.text)
    __user_initial_stackheap                 0x000001ed   Thumb Code     0  startup_mdr32f1qi.o(.text)
    __aeabi_memcpy                           0x00000211   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x00000211   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_uidiv                            0x00000295   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x00000295   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x000002a9   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x000002a9   Thumb Code   338  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x00000401   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000403   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000405   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x00000407   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000445   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x00000455   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000455   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000455   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000045d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000469   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000469   Thumb Code     2  use_no_semi.o(.text)
    __decompress                             0x0000046b   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0000046b   Thumb Code    58  __dczerorl.o(.text)
    __semihosting_library_function           0x0000046b   Thumb Code     0  indicate_semi.o(.text)
    CLOCK_Init                               0x000004a5   Thumb Code    78  clock.o(.text.CLOCK_Init)
    DMA_Cmd                                  0x000004f5   Thumb Code    52  mdr32fxqi_dma.o(.text.DMA_Cmd)
    DMA_CtrlDataInit                         0x00000529   Thumb Code   158  mdr32fxqi_dma.o(.text.DMA_CtrlDataInit)
    DMA_DeInit                               0x000005c9   Thumb Code    60  mdr32fxqi_dma.o(.text.DMA_DeInit)
    DMA_GetFlagStatus                        0x0000060d   Thumb Code   232  mdr32fxqi_dma.o(.text.DMA_GetFlagStatus)
    DMA_IRQHandler                           0x00000705   Thumb Code    48  dma.o(.text.DMA_IRQHandler)
    DMA_Init                                 0x0000073d   Thumb Code   236  mdr32fxqi_dma.o(.text.DMA_Init)
    DMA_StructInit                           0x00000851   Thumb Code    34  mdr32fxqi_dma.o(.text.DMA_StructInit)
    DMA_UART_RX_init                         0x00000875   Thumb Code   132  uart.o(.text.DMA_UART_RX_init)
    DMA_common_init                          0x00000901   Thumb Code    40  dma.o(.text.DMA_common_init)
    PORT_Init                                0x00000941   Thumb Code   328  mdr32fxqi_port.o(.text.PORT_Init)
    PORT_StructInit                          0x00000a8d   Thumb Code    52  mdr32fxqi_port.o(.text.PORT_StructInit)
    PortsInit                                0x00000ac5   Thumb Code    88  ports.o(.text.PortsInit)
    RST_CLK_CPU_PLLcmd                       0x00000b21   Thumb Code    52  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLcmd)
    RST_CLK_CPU_PLLconfig                    0x00000b55   Thumb Code   112  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLconfig)
    RST_CLK_CPU_PLLstatus                    0x00000bc9   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLstatus)
    RST_CLK_CPU_PLLuse                       0x00000c2d   Thumb Code    56  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPU_PLLuse)
    RST_CLK_CPUclkPrescaler                  0x00000c65   Thumb Code    40  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkPrescaler)
    RST_CLK_CPUclkSelection                  0x00000c8d   Thumb Code    40  mdr32fxqi_rst_clk.o(.text.RST_CLK_CPUclkSelection)
    RST_CLK_GetClocksFreq                    0x00000cb5   Thumb Code   596  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetClocksFreq)
    RST_CLK_GetFlagStatus                    0x00000f19   Thumb Code    80  mdr32fxqi_rst_clk.o(.text.RST_CLK_GetFlagStatus)
    RST_CLK_HSEconfig                        0x00000f71   Thumb Code    68  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEconfig)
    RST_CLK_HSEstatus                        0x00000fb5   Thumb Code   100  mdr32fxqi_rst_clk.o(.text.RST_CLK_HSEstatus)
    RST_CLK_PCLKcmd                          0x00001019   Thumb Code    44  mdr32fxqi_rst_clk.o(.text.RST_CLK_PCLKcmd)
    SystemCoreClockUpdate                    0x00001045   Thumb Code   176  system_mdr32f1qi.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00001109   Thumb Code    60  system_mdr32f1qi.o(.text.SystemInit)
    TIMER1_init                              0x0000116d   Thumb Code    60  timer.o(.text.TIMER1_init)
    TIMER2_init                              0x000011b5   Thumb Code    60  timer.o(.text.TIMER2_init)
    TIMER_BRGInit                            0x000011f9   Thumb Code   244  mdr32fxqi_timer.o(.text.TIMER_BRGInit)
    TIMER_Cmd                                0x00001301   Thumb Code    52  mdr32fxqi_timer.o(.text.TIMER_Cmd)
    TIMER_CntInit                            0x00001335   Thumb Code    88  mdr32fxqi_timer.o(.text.TIMER_CntInit)
    TIMER_CntStructInit                      0x0000138d   Thumb Code    58  mdr32fxqi_timer.o(.text.TIMER_CntStructInit)
    TIMER_GetCounter                         0x000013c7   Thumb Code    12  mdr32fxqi_timer.o(.text.TIMER_GetCounter)
    UART1_IRQHandler                         0x000013d5   Thumb Code    64  uart.o(.text.UART1_IRQHandler)
    UART2_IRQHandler                         0x00001419   Thumb Code    64  uart.o(.text.UART2_IRQHandler)
    UART_BRGInit                             0x0000145d   Thumb Code   112  mdr32fxqi_uart.o(.text.UART_BRGInit)
    UART_ClearITPendingBit                   0x000014d1   Thumb Code    20  mdr32fxqi_uart.o(.text.UART_ClearITPendingBit)
    UART_Cmd                                 0x000014e5   Thumb Code    44  mdr32fxqi_uart.o(.text.UART_Cmd)
    UART_DMACmd                              0x00001515   Thumb Code    48  mdr32fxqi_uart.o(.text.UART_DMACmd)
    UART_GetFlagStatus                       0x00001545   Thumb Code    50  mdr32fxqi_uart.o(.text.UART_GetFlagStatus)
    UART_ITConfig                            0x00001577   Thumb Code    46  mdr32fxqi_uart.o(.text.UART_ITConfig)
    UART_Init                                0x000015a5   Thumb Code   260  mdr32fxqi_uart.o(.text.UART_Init)
    UART_ReceiveData                         0x000016b5   Thumb Code    14  mdr32fxqi_uart.o(.text.UART_ReceiveData)
    UART_SendData                            0x000016c3   Thumb Code    18  mdr32fxqi_uart.o(.text.UART_SendData)
    main                                     0x000017b1   Thumb Code   184  main.o(.text.main)
    uart_init                                0x00001879   Thumb Code   166  uart.o(.text.uart_init)
    uart_read                                0x00001921   Thumb Code   404  uart.o(.text.uart_read)
    uart_set_read_timeout                    0x00001ab5   Thumb Code    26  uart.o(.text.uart_set_read_timeout)
    uart_set_write_timeout                   0x00001acf   Thumb Code    26  uart.o(.text.uart_set_write_timeout)
    uart_write                               0x00001ae9   Thumb Code   172  uart.o(.text.uart_write)
    Region$$Table$$Base                      0x00001b98   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001bc8   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_mdr32f1qi.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    TIMER1InitStruct                         0x20000068   Data          32  timer.o(.bss.TIMER1InitStruct)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    TIMER2InitStruct                         0x20000088   Data          32  timer.o(.bss.TIMER2InitStruct)
    UART1                                    0x20100000   Data          60  uart.o(EXECUTABLE_MEMORY_SECTION)
    UART2                                    0x2010003c   Data          60  uart.o(EXECUTABLE_MEMORY_SECTION)
    DMA_ControlTable                         0x20100400   Data        1024  mdr32fxqi_dma.o(EXECUTABLE_MEMORY_SECTION)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002400, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00001c14])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001bc8, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          155    RESET               startup_mdr32f1qi.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          555  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO          750    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001a   Code   RO          752    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0000011e   0x0000011e   0x00000002   PAD
    0x00000120   0x00000120   0x0000001c   Code   RO          754    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0000013c   0x0000013c   0x00000002   Code   RO          609    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          623    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          625    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          627    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          630    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          632    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          634    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          637    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          639    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          641    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          643    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          645    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          647    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          649    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          651    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          653    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          655    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          657    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          661    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          663    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          665    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000000   Code   RO          667    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0000013e   0x0000013e   0x00000002   Code   RO          668    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x00000140   0x00000140   0x00000002   Code   RO          703    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000142   0x00000142   0x00000000   Code   RO          731    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          733    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          736    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          739    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          741    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000000   Code   RO          744    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000142   0x00000142   0x00000002   Code   RO          745    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000144   0x00000144   0x00000000   Code   RO          572    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000144   0x00000144   0x00000000   Code   RO          579    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000144   0x00000144   0x00000006   Code   RO          591    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000014a   0x0000014a   0x00000000   Code   RO          581    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0000014a   0x0000014a   0x00000004   Code   RO          582    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000014e   0x0000014e   0x00000000   Code   RO          584    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000014e   0x0000014e   0x00000008   Code   RO          585    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000156   0x00000156   0x00000002   Code   RO          614    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000158   0x00000158   0x00000000   Code   RO          674    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000158   0x00000158   0x00000004   Code   RO          675    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0000015c   0x0000015c   0x00000006   Code   RO          676    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x00000162   0x00000162   0x00000002   PAD
    0x00000164   0x00000164   0x00000038   Code   RO          543    .emb_text           c_p.l(rt_memcpy.o)
    0x0000019c   0x0000019c   0x00000074   Code   RO          156    .text               startup_mdr32f1qi.o
    0x00000210   0x00000210   0x00000082   Code   RO          544    .text               c_p.l(rt_memcpy.o)
    0x00000292   0x00000292   0x00000002   PAD
    0x00000294   0x00000294   0x0000016c   Code   RO          549    .text               c_p.l(aeabi_sdiv.o)
    0x00000400   0x00000400   0x00000006   Code   RO          553    .text               c_p.l(heapauxi.o)
    0x00000406   0x00000406   0x0000003e   Code   RO          595    .text               c_p.l(sys_stackheap_outer.o)
    0x00000444   0x00000444   0x00000010   Code   RO          598    .text               c_p.l(exit.o)
    0x00000454   0x00000454   0x00000008   Code   RO          610    .text               c_p.l(libspace.o)
    0x0000045c   0x0000045c   0x0000000c   Code   RO          669    .text               c_p.l(sys_exit.o)
    0x00000468   0x00000468   0x00000002   Code   RO          692    .text               c_p.l(use_no_semi.o)
    0x0000046a   0x0000046a   0x00000000   Code   RO          694    .text               c_p.l(indicate_semi.o)
    0x0000046a   0x0000046a   0x0000003a   Code   RO          748    .text               c_p.l(__dczerorl.o)
    0x000004a4   0x000004a4   0x0000004e   Code   RO           23    .text.CLOCK_Init    clock.o
    0x000004f2   0x000004f2   0x00000002   PAD
    0x000004f4   0x000004f4   0x00000034   Code   RO          254    .text.DMA_Cmd       mdr32fxqi_dma.o
    0x00000528   0x00000528   0x0000009e   Code   RO          240    .text.DMA_CtrlDataInit  mdr32fxqi_dma.o
    0x000005c6   0x000005c6   0x00000002   PAD
    0x000005c8   0x000005c8   0x00000044   Code   RO          236    .text.DMA_DeInit    mdr32fxqi_dma.o
    0x0000060c   0x0000060c   0x000000f8   Code   RO          262    .text.DMA_GetFlagStatus  mdr32fxqi_dma.o
    0x00000704   0x00000704   0x00000038   Code   RO           33    .text.DMA_IRQHandler  dma.o
    0x0000073c   0x0000073c   0x00000114   Code   RO          248    .text.DMA_Init      mdr32fxqi_dma.o
    0x00000850   0x00000850   0x00000022   Code   RO          250    .text.DMA_StructInit  mdr32fxqi_dma.o
    0x00000872   0x00000872   0x00000002   PAD
    0x00000874   0x00000874   0x0000008c   Code   RO          140    .text.DMA_UART_RX_init  uart.o
    0x00000900   0x00000900   0x00000040   Code   RO           31    .text.DMA_common_init  dma.o
    0x00000940   0x00000940   0x0000014c   Code   RO          274    .text.PORT_Init     mdr32fxqi_port.o
    0x00000a8c   0x00000a8c   0x00000038   Code   RO          276    .text.PORT_StructInit  mdr32fxqi_port.o
    0x00000ac4   0x00000ac4   0x0000005c   Code   RO           54    .text.PortsInit     ports.o
    0x00000b20   0x00000b20   0x00000034   Code   RO          335    .text.RST_CLK_CPU_PLLcmd  mdr32fxqi_rst_clk.o
    0x00000b54   0x00000b54   0x00000074   Code   RO          331    .text.RST_CLK_CPU_PLLconfig  mdr32fxqi_rst_clk.o
    0x00000bc8   0x00000bc8   0x00000064   Code   RO          337    .text.RST_CLK_CPU_PLLstatus  mdr32fxqi_rst_clk.o
    0x00000c2c   0x00000c2c   0x00000038   Code   RO          333    .text.RST_CLK_CPU_PLLuse  mdr32fxqi_rst_clk.o
    0x00000c64   0x00000c64   0x00000028   Code   RO          339    .text.RST_CLK_CPUclkPrescaler  mdr32fxqi_rst_clk.o
    0x00000c8c   0x00000c8c   0x00000028   Code   RO          307    .text.RST_CLK_CPUclkSelection  mdr32fxqi_rst_clk.o
    0x00000cb4   0x00000cb4   0x00000264   Code   RO          369    .text.RST_CLK_GetClocksFreq  mdr32fxqi_rst_clk.o
    0x00000f18   0x00000f18   0x00000058   Code   RO          313    .text.RST_CLK_GetFlagStatus  mdr32fxqi_rst_clk.o
    0x00000f70   0x00000f70   0x00000044   Code   RO          309    .text.RST_CLK_HSEconfig  mdr32fxqi_rst_clk.o
    0x00000fb4   0x00000fb4   0x00000064   Code   RO          311    .text.RST_CLK_HSEstatus  mdr32fxqi_rst_clk.o
    0x00001018   0x00001018   0x0000002c   Code   RO          301    .text.RST_CLK_PCLKcmd  mdr32fxqi_rst_clk.o
    0x00001044   0x00001044   0x000000c4   Code   RO          163    .text.SystemCoreClockUpdate  system_mdr32f1qi.o
    0x00001108   0x00001108   0x00000064   Code   RO          165    .text.SystemInit    system_mdr32f1qi.o
    0x0000116c   0x0000116c   0x00000048   Code   RO           99    .text.TIMER1_init   timer.o
    0x000011b4   0x000011b4   0x00000044   Code   RO          101    .text.TIMER2_init   timer.o
    0x000011f8   0x000011f8   0x00000108   Code   RO          492    .text.TIMER_BRGInit  mdr32fxqi_timer.o
    0x00001300   0x00001300   0x00000034   Code   RO          384    .text.TIMER_Cmd     mdr32fxqi_timer.o
    0x00001334   0x00001334   0x00000058   Code   RO          380    .text.TIMER_CntInit  mdr32fxqi_timer.o
    0x0000138c   0x0000138c   0x0000003a   Code   RO          382    .text.TIMER_CntStructInit  mdr32fxqi_timer.o
    0x000013c6   0x000013c6   0x0000000c   Code   RO          388    .text.TIMER_GetCounter  mdr32fxqi_timer.o
    0x000013d2   0x000013d2   0x00000002   PAD
    0x000013d4   0x000013d4   0x00000044   Code   RO          118    .text.UART1_IRQHandler  uart.o
    0x00001418   0x00001418   0x00000044   Code   RO          120    .text.UART2_IRQHandler  uart.o
    0x0000145c   0x0000145c   0x00000074   Code   RO          533    .text.UART_BRGInit  mdr32fxqi_uart.o
    0x000014d0   0x000014d0   0x00000014   Code   RO          515    .text.UART_ClearITPendingBit  mdr32fxqi_uart.o
    0x000014e4   0x000014e4   0x00000030   Code   RO          507    .text.UART_Cmd      mdr32fxqi_uart.o
    0x00001514   0x00001514   0x00000030   Code   RO          519    .text.UART_DMACmd   mdr32fxqi_uart.o
    0x00001544   0x00001544   0x00000032   Code   RO          531    .text.UART_GetFlagStatus  mdr32fxqi_uart.o
    0x00001576   0x00001576   0x0000002e   Code   RO          509    .text.UART_ITConfig  mdr32fxqi_uart.o
    0x000015a4   0x000015a4   0x00000110   Code   RO          503    .text.UART_Init     mdr32fxqi_uart.o
    0x000016b4   0x000016b4   0x0000000e   Code   RO          523    .text.UART_ReceiveData  mdr32fxqi_uart.o
    0x000016c2   0x000016c2   0x00000012   Code   RO          521    .text.UART_SendData  mdr32fxqi_uart.o
    0x000016d4   0x000016d4   0x0000002c   Code   RO          238    .text.__NVIC_ClearPendingIRQ  mdr32fxqi_dma.o
    0x00001700   0x00001700   0x0000002c   Code   RO          124    .text.__NVIC_EnableIRQ  uart.o
    0x0000172c   0x0000172c   0x00000084   Code   RO          126    .text.__NVIC_SetPriority  uart.o
    0x000017b0   0x000017b0   0x000000c8   Code   RO           42    .text.main          main.o
    0x00001878   0x00001878   0x000000a6   Code   RO          122    .text.uart_init     uart.o
    0x0000191e   0x0000191e   0x00000002   PAD
    0x00001920   0x00001920   0x00000194   Code   RO          130    .text.uart_read     uart.o
    0x00001ab4   0x00001ab4   0x0000001a   Code   RO          142    .text.uart_set_read_timeout  uart.o
    0x00001ace   0x00001ace   0x0000001a   Code   RO          144    .text.uart_set_write_timeout  uart.o
    0x00001ae8   0x00001ae8   0x000000b0   Code   RO          128    .text.uart_write    uart.o
    0x00001b98   0x00001b98   0x00000030   Data   RO          747    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00001bc8, Size: 0x000020a8, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001bc8   0x00000004   Data   RW          167    .data.SystemCoreClock  system_mdr32f1qi.o
    0x20000004   0x00001bcc   0x00000004   PAD
    0x20000008        -       0x00000060   Zero   RW          611    .bss                c_p.l(libspace.o)
    0x20000068        -       0x00000020   Zero   RW          107    .bss.TIMER1InitStruct  timer.o
    0x20000088        -       0x00000020   Zero   RW          108    .bss.TIMER2InitStruct  timer.o
    0x200000a8        -       0x00001000   Zero   RW          154    HEAP                startup_mdr32f1qi.o
    0x200010a8        -       0x00001000   Zero   RW          153    STACK               startup_mdr32f1qi.o


    Execution Region RW_IRAM2 (Exec base: 0x20100000, Load base: 0x00001c00, Size: 0x00000800, Max: 0x00004000, ABSOLUTE, COMPRESSED[0x00000014])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20100000   COMPRESSED   0x00000078   Data   RW          146    EXECUTABLE_MEMORY_SECTION  uart.o
    0x20100078   COMPRESSED   0x00000388   PAD
    0x20100400   COMPRESSED   0x00000400   Data   RW          264    EXECUTABLE_MEMORY_SECTION  mdr32fxqi_dma.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        78          0          0          0          0       1751   clock.o
       120         32          0          0          0       3732   dma.o
       200         16          0          0          0       6245   main.o
       880        100          0       1024          0       8613   mdr32fxqi_dma.o
       388          8          0          0          0       4906   mdr32fxqi_port.o
      1316         28          0          0          0      12829   mdr32fxqi_rst_clk.o
       474         20          0          0          0      21062   mdr32fxqi_timer.o
       632         20          0          0          0       7536   mdr32fxqi_uart.o
        92          4          0          0          0       2623   ports.o
       116         28        192          0       8192       1944   startup_mdr32f1qi.o
       296         60          0          4          0       1557   system_mdr32f1qi.o
       140         20          0          0         64       3304   timer.o
      1250         32          0        120          0      10484   uart.o

    ----------------------------------------------------------------------
      5992        368        240       2052       8260      86586   Object Totals
         0          0         48          0          0          0   (incl. Generated)
        10          0          0        904          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
       364          4          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       880         20          0          0         96        784   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       874         20          0          0         96        784   c_p.l

    ----------------------------------------------------------------------
       880         20          0          0         96        784   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6872        388        240       2052       8356      86982   Grand Totals
      6872        388        240         24       8356      86982   ELF Image Totals (compressed)
      6872        388        240         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7112 (   6.95kB)
    Total RW  Size (RW Data + ZI Data)             10408 (  10.16kB)
    Total ROM Size (Code + RO Data + RW Data)       7136 (   6.97kB)

==============================================================================

